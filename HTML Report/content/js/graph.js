/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 318.0, "minX": 0.0, "maxY": 5682.0, "series": [{"data": [[0.0, 369.0], [0.1, 369.0], [0.2, 369.0], [0.3, 369.0], [0.4, 369.0], [0.5, 369.0], [0.6, 369.0], [0.7, 369.0], [0.8, 369.0], [0.9, 369.0], [1.0, 377.0], [1.1, 377.0], [1.2, 377.0], [1.3, 377.0], [1.4, 377.0], [1.5, 377.0], [1.6, 377.0], [1.7, 377.0], [1.8, 377.0], [1.9, 377.0], [2.0, 385.0], [2.1, 385.0], [2.2, 385.0], [2.3, 385.0], [2.4, 385.0], [2.5, 385.0], [2.6, 385.0], [2.7, 385.0], [2.8, 385.0], [2.9, 385.0], [3.0, 403.0], [3.1, 403.0], [3.2, 403.0], [3.3, 403.0], [3.4, 403.0], [3.5, 403.0], [3.6, 403.0], [3.7, 403.0], [3.8, 403.0], [3.9, 403.0], [4.0, 417.0], [4.1, 417.0], [4.2, 417.0], [4.3, 417.0], [4.4, 417.0], [4.5, 417.0], [4.6, 417.0], [4.7, 417.0], [4.8, 417.0], [4.9, 417.0], [5.0, 427.0], [5.1, 427.0], [5.2, 427.0], [5.3, 427.0], [5.4, 427.0], [5.5, 427.0], [5.6, 427.0], [5.7, 427.0], [5.8, 427.0], [5.9, 427.0], [6.0, 440.0], [6.1, 440.0], [6.2, 440.0], [6.3, 440.0], [6.4, 440.0], [6.5, 440.0], [6.6, 440.0], [6.7, 440.0], [6.8, 440.0], [6.9, 440.0], [7.0, 443.0], [7.1, 443.0], [7.2, 443.0], [7.3, 443.0], [7.4, 443.0], [7.5, 443.0], [7.6, 443.0], [7.7, 443.0], [7.8, 443.0], [7.9, 443.0], [8.0, 446.0], [8.1, 446.0], [8.2, 446.0], [8.3, 446.0], [8.4, 446.0], [8.5, 446.0], [8.6, 446.0], [8.7, 446.0], [8.8, 446.0], [8.9, 446.0], [9.0, 462.0], [9.1, 462.0], [9.2, 462.0], [9.3, 462.0], [9.4, 462.0], [9.5, 462.0], [9.6, 462.0], [9.7, 462.0], [9.8, 462.0], [9.9, 462.0], [10.0, 474.0], [10.1, 474.0], [10.2, 474.0], [10.3, 474.0], [10.4, 474.0], [10.5, 474.0], [10.6, 474.0], [10.7, 474.0], [10.8, 474.0], [10.9, 474.0], [11.0, 478.0], [11.1, 478.0], [11.2, 478.0], [11.3, 478.0], [11.4, 478.0], [11.5, 478.0], [11.6, 478.0], [11.7, 478.0], [11.8, 478.0], [11.9, 478.0], [12.0, 509.0], [12.1, 509.0], [12.2, 509.0], [12.3, 509.0], [12.4, 509.0], [12.5, 509.0], [12.6, 509.0], [12.7, 509.0], [12.8, 509.0], [12.9, 509.0], [13.0, 522.0], [13.1, 522.0], [13.2, 522.0], [13.3, 522.0], [13.4, 522.0], [13.5, 522.0], [13.6, 522.0], [13.7, 522.0], [13.8, 522.0], [13.9, 522.0], [14.0, 542.0], [14.1, 542.0], [14.2, 542.0], [14.3, 542.0], [14.4, 542.0], [14.5, 542.0], [14.6, 542.0], [14.7, 542.0], [14.8, 542.0], [14.9, 542.0], [15.0, 642.0], [15.1, 642.0], [15.2, 642.0], [15.3, 642.0], [15.4, 642.0], [15.5, 642.0], [15.6, 642.0], [15.7, 642.0], [15.8, 642.0], [15.9, 642.0], [16.0, 658.0], [16.1, 658.0], [16.2, 658.0], [16.3, 658.0], [16.4, 658.0], [16.5, 658.0], [16.6, 658.0], [16.7, 658.0], [16.8, 658.0], [16.9, 658.0], [17.0, 661.0], [17.1, 661.0], [17.2, 661.0], [17.3, 661.0], [17.4, 661.0], [17.5, 661.0], [17.6, 661.0], [17.7, 661.0], [17.8, 661.0], [17.9, 661.0], [18.0, 663.0], [18.1, 663.0], [18.2, 663.0], [18.3, 663.0], [18.4, 663.0], [18.5, 663.0], [18.6, 663.0], [18.7, 663.0], [18.8, 663.0], [18.9, 663.0], [19.0, 668.0], [19.1, 668.0], [19.2, 668.0], [19.3, 668.0], [19.4, 668.0], [19.5, 668.0], [19.6, 668.0], [19.7, 668.0], [19.8, 668.0], [19.9, 668.0], [20.0, 683.0], [20.1, 683.0], [20.2, 683.0], [20.3, 683.0], [20.4, 683.0], [20.5, 683.0], [20.6, 683.0], [20.7, 683.0], [20.8, 683.0], [20.9, 683.0], [21.0, 723.0], [21.1, 723.0], [21.2, 723.0], [21.3, 723.0], [21.4, 723.0], [21.5, 723.0], [21.6, 723.0], [21.7, 723.0], [21.8, 723.0], [21.9, 723.0], [22.0, 724.0], [22.1, 724.0], [22.2, 724.0], [22.3, 724.0], [22.4, 724.0], [22.5, 724.0], [22.6, 724.0], [22.7, 724.0], [22.8, 724.0], [22.9, 724.0], [23.0, 726.0], [23.1, 726.0], [23.2, 726.0], [23.3, 726.0], [23.4, 726.0], [23.5, 726.0], [23.6, 726.0], [23.7, 726.0], [23.8, 726.0], [23.9, 726.0], [24.0, 769.0], [24.1, 769.0], [24.2, 769.0], [24.3, 769.0], [24.4, 769.0], [24.5, 769.0], [24.6, 769.0], [24.7, 769.0], [24.8, 769.0], [24.9, 769.0], [25.0, 792.0], [25.1, 792.0], [25.2, 792.0], [25.3, 792.0], [25.4, 792.0], [25.5, 792.0], [25.6, 792.0], [25.7, 792.0], [25.8, 792.0], [25.9, 792.0], [26.0, 796.0], [26.1, 796.0], [26.2, 796.0], [26.3, 796.0], [26.4, 796.0], [26.5, 796.0], [26.6, 796.0], [26.7, 796.0], [26.8, 796.0], [26.9, 796.0], [27.0, 802.0], [27.1, 802.0], [27.2, 802.0], [27.3, 802.0], [27.4, 802.0], [27.5, 802.0], [27.6, 802.0], [27.7, 802.0], [27.8, 802.0], [27.9, 802.0], [28.0, 806.0], [28.1, 806.0], [28.2, 806.0], [28.3, 806.0], [28.4, 806.0], [28.5, 806.0], [28.6, 806.0], [28.7, 806.0], [28.8, 806.0], [28.9, 806.0], [29.0, 808.0], [29.1, 808.0], [29.2, 808.0], [29.3, 808.0], [29.4, 808.0], [29.5, 808.0], [29.6, 808.0], [29.7, 808.0], [29.8, 808.0], [29.9, 808.0], [30.0, 811.0], [30.1, 811.0], [30.2, 811.0], [30.3, 811.0], [30.4, 811.0], [30.5, 811.0], [30.6, 811.0], [30.7, 811.0], [30.8, 811.0], [30.9, 811.0], [31.0, 812.0], [31.1, 812.0], [31.2, 812.0], [31.3, 812.0], [31.4, 812.0], [31.5, 812.0], [31.6, 812.0], [31.7, 812.0], [31.8, 812.0], [31.9, 812.0], [32.0, 841.0], [32.1, 841.0], [32.2, 841.0], [32.3, 841.0], [32.4, 841.0], [32.5, 841.0], [32.6, 841.0], [32.7, 841.0], [32.8, 841.0], [32.9, 841.0], [33.0, 855.0], [33.1, 855.0], [33.2, 855.0], [33.3, 855.0], [33.4, 855.0], [33.5, 855.0], [33.6, 855.0], [33.7, 855.0], [33.8, 855.0], [33.9, 855.0], [34.0, 859.0], [34.1, 859.0], [34.2, 859.0], [34.3, 859.0], [34.4, 859.0], [34.5, 859.0], [34.6, 859.0], [34.7, 859.0], [34.8, 859.0], [34.9, 859.0], [35.0, 862.0], [35.1, 862.0], [35.2, 862.0], [35.3, 862.0], [35.4, 862.0], [35.5, 862.0], [35.6, 862.0], [35.7, 862.0], [35.8, 862.0], [35.9, 862.0], [36.0, 871.0], [36.1, 871.0], [36.2, 871.0], [36.3, 871.0], [36.4, 871.0], [36.5, 871.0], [36.6, 871.0], [36.7, 871.0], [36.8, 871.0], [36.9, 871.0], [37.0, 876.0], [37.1, 876.0], [37.2, 876.0], [37.3, 876.0], [37.4, 876.0], [37.5, 876.0], [37.6, 876.0], [37.7, 876.0], [37.8, 876.0], [37.9, 876.0], [38.0, 882.0], [38.1, 882.0], [38.2, 882.0], [38.3, 882.0], [38.4, 882.0], [38.5, 882.0], [38.6, 882.0], [38.7, 882.0], [38.8, 882.0], [38.9, 882.0], [39.0, 882.0], [39.1, 882.0], [39.2, 882.0], [39.3, 882.0], [39.4, 882.0], [39.5, 882.0], [39.6, 882.0], [39.7, 882.0], [39.8, 882.0], [39.9, 882.0], [40.0, 903.0], [40.1, 903.0], [40.2, 903.0], [40.3, 903.0], [40.4, 903.0], [40.5, 903.0], [40.6, 903.0], [40.7, 903.0], [40.8, 903.0], [40.9, 903.0], [41.0, 908.0], [41.1, 908.0], [41.2, 908.0], [41.3, 908.0], [41.4, 908.0], [41.5, 908.0], [41.6, 908.0], [41.7, 908.0], [41.8, 908.0], [41.9, 908.0], [42.0, 911.0], [42.1, 911.0], [42.2, 911.0], [42.3, 911.0], [42.4, 911.0], [42.5, 911.0], [42.6, 911.0], [42.7, 911.0], [42.8, 911.0], [42.9, 911.0], [43.0, 929.0], [43.1, 929.0], [43.2, 929.0], [43.3, 929.0], [43.4, 929.0], [43.5, 929.0], [43.6, 929.0], [43.7, 929.0], [43.8, 929.0], [43.9, 929.0], [44.0, 951.0], [44.1, 951.0], [44.2, 951.0], [44.3, 951.0], [44.4, 951.0], [44.5, 951.0], [44.6, 951.0], [44.7, 951.0], [44.8, 951.0], [44.9, 951.0], [45.0, 981.0], [45.1, 981.0], [45.2, 981.0], [45.3, 981.0], [45.4, 981.0], [45.5, 981.0], [45.6, 981.0], [45.7, 981.0], [45.8, 981.0], [45.9, 981.0], [46.0, 988.0], [46.1, 988.0], [46.2, 988.0], [46.3, 988.0], [46.4, 988.0], [46.5, 988.0], [46.6, 988.0], [46.7, 988.0], [46.8, 988.0], [46.9, 988.0], [47.0, 1009.0], [47.1, 1009.0], [47.2, 1009.0], [47.3, 1009.0], [47.4, 1009.0], [47.5, 1009.0], [47.6, 1009.0], [47.7, 1009.0], [47.8, 1009.0], [47.9, 1009.0], [48.0, 1052.0], [48.1, 1052.0], [48.2, 1052.0], [48.3, 1052.0], [48.4, 1052.0], [48.5, 1052.0], [48.6, 1052.0], [48.7, 1052.0], [48.8, 1052.0], [48.9, 1052.0], [49.0, 1073.0], [49.1, 1073.0], [49.2, 1073.0], [49.3, 1073.0], [49.4, 1073.0], [49.5, 1073.0], [49.6, 1073.0], [49.7, 1073.0], [49.8, 1073.0], [49.9, 1073.0], [50.0, 1075.0], [50.1, 1075.0], [50.2, 1075.0], [50.3, 1075.0], [50.4, 1075.0], [50.5, 1075.0], [50.6, 1075.0], [50.7, 1075.0], [50.8, 1075.0], [50.9, 1075.0], [51.0, 1098.0], [51.1, 1098.0], [51.2, 1098.0], [51.3, 1098.0], [51.4, 1098.0], [51.5, 1098.0], [51.6, 1098.0], [51.7, 1098.0], [51.8, 1098.0], [51.9, 1098.0], [52.0, 1123.0], [52.1, 1123.0], [52.2, 1123.0], [52.3, 1123.0], [52.4, 1123.0], [52.5, 1123.0], [52.6, 1123.0], [52.7, 1123.0], [52.8, 1123.0], [52.9, 1123.0], [53.0, 1135.0], [53.1, 1135.0], [53.2, 1135.0], [53.3, 1135.0], [53.4, 1135.0], [53.5, 1135.0], [53.6, 1135.0], [53.7, 1135.0], [53.8, 1135.0], [53.9, 1135.0], [54.0, 1147.0], [54.1, 1147.0], [54.2, 1147.0], [54.3, 1147.0], [54.4, 1147.0], [54.5, 1147.0], [54.6, 1147.0], [54.7, 1147.0], [54.8, 1147.0], [54.9, 1147.0], [55.0, 1153.0], [55.1, 1153.0], [55.2, 1153.0], [55.3, 1153.0], [55.4, 1153.0], [55.5, 1153.0], [55.6, 1153.0], [55.7, 1153.0], [55.8, 1153.0], [55.9, 1153.0], [56.0, 1201.0], [56.1, 1201.0], [56.2, 1201.0], [56.3, 1201.0], [56.4, 1201.0], [56.5, 1201.0], [56.6, 1201.0], [56.7, 1201.0], [56.8, 1201.0], [56.9, 1201.0], [57.0, 1231.0], [57.1, 1231.0], [57.2, 1231.0], [57.3, 1231.0], [57.4, 1231.0], [57.5, 1231.0], [57.6, 1231.0], [57.7, 1231.0], [57.8, 1231.0], [57.9, 1231.0], [58.0, 1235.0], [58.1, 1235.0], [58.2, 1235.0], [58.3, 1235.0], [58.4, 1235.0], [58.5, 1235.0], [58.6, 1235.0], [58.7, 1235.0], [58.8, 1235.0], [58.9, 1235.0], [59.0, 1240.0], [59.1, 1240.0], [59.2, 1240.0], [59.3, 1240.0], [59.4, 1240.0], [59.5, 1240.0], [59.6, 1240.0], [59.7, 1240.0], [59.8, 1240.0], [59.9, 1240.0], [60.0, 1280.0], [60.1, 1280.0], [60.2, 1280.0], [60.3, 1280.0], [60.4, 1280.0], [60.5, 1280.0], [60.6, 1280.0], [60.7, 1280.0], [60.8, 1280.0], [60.9, 1280.0], [61.0, 1300.0], [61.1, 1300.0], [61.2, 1300.0], [61.3, 1300.0], [61.4, 1300.0], [61.5, 1300.0], [61.6, 1300.0], [61.7, 1300.0], [61.8, 1300.0], [61.9, 1300.0], [62.0, 1309.0], [62.1, 1309.0], [62.2, 1309.0], [62.3, 1309.0], [62.4, 1309.0], [62.5, 1309.0], [62.6, 1309.0], [62.7, 1309.0], [62.8, 1309.0], [62.9, 1309.0], [63.0, 1328.0], [63.1, 1328.0], [63.2, 1328.0], [63.3, 1328.0], [63.4, 1328.0], [63.5, 1328.0], [63.6, 1328.0], [63.7, 1328.0], [63.8, 1328.0], [63.9, 1328.0], [64.0, 1328.0], [64.1, 1328.0], [64.2, 1328.0], [64.3, 1328.0], [64.4, 1328.0], [64.5, 1328.0], [64.6, 1328.0], [64.7, 1328.0], [64.8, 1328.0], [64.9, 1328.0], [65.0, 1335.0], [65.1, 1335.0], [65.2, 1335.0], [65.3, 1335.0], [65.4, 1335.0], [65.5, 1335.0], [65.6, 1335.0], [65.7, 1335.0], [65.8, 1335.0], [65.9, 1335.0], [66.0, 1336.0], [66.1, 1336.0], [66.2, 1336.0], [66.3, 1336.0], [66.4, 1336.0], [66.5, 1336.0], [66.6, 1336.0], [66.7, 1336.0], [66.8, 1336.0], [66.9, 1336.0], [67.0, 1346.0], [67.1, 1346.0], [67.2, 1346.0], [67.3, 1346.0], [67.4, 1346.0], [67.5, 1346.0], [67.6, 1346.0], [67.7, 1346.0], [67.8, 1346.0], [67.9, 1346.0], [68.0, 1393.0], [68.1, 1393.0], [68.2, 1393.0], [68.3, 1393.0], [68.4, 1393.0], [68.5, 1393.0], [68.6, 1393.0], [68.7, 1393.0], [68.8, 1393.0], [68.9, 1393.0], [69.0, 1395.0], [69.1, 1395.0], [69.2, 1395.0], [69.3, 1395.0], [69.4, 1395.0], [69.5, 1395.0], [69.6, 1395.0], [69.7, 1395.0], [69.8, 1395.0], [69.9, 1395.0], [70.0, 1413.0], [70.1, 1413.0], [70.2, 1413.0], [70.3, 1413.0], [70.4, 1413.0], [70.5, 1413.0], [70.6, 1413.0], [70.7, 1413.0], [70.8, 1413.0], [70.9, 1413.0], [71.0, 1417.0], [71.1, 1417.0], [71.2, 1417.0], [71.3, 1417.0], [71.4, 1417.0], [71.5, 1417.0], [71.6, 1417.0], [71.7, 1417.0], [71.8, 1417.0], [71.9, 1417.0], [72.0, 1491.0], [72.1, 1491.0], [72.2, 1491.0], [72.3, 1491.0], [72.4, 1491.0], [72.5, 1491.0], [72.6, 1491.0], [72.7, 1491.0], [72.8, 1491.0], [72.9, 1491.0], [73.0, 1494.0], [73.1, 1494.0], [73.2, 1494.0], [73.3, 1494.0], [73.4, 1494.0], [73.5, 1494.0], [73.6, 1494.0], [73.7, 1494.0], [73.8, 1494.0], [73.9, 1494.0], [74.0, 1541.0], [74.1, 1541.0], [74.2, 1541.0], [74.3, 1541.0], [74.4, 1541.0], [74.5, 1541.0], [74.6, 1541.0], [74.7, 1541.0], [74.8, 1541.0], [74.9, 1541.0], [75.0, 1561.0], [75.1, 1561.0], [75.2, 1561.0], [75.3, 1561.0], [75.4, 1561.0], [75.5, 1561.0], [75.6, 1561.0], [75.7, 1561.0], [75.8, 1561.0], [75.9, 1561.0], [76.0, 1564.0], [76.1, 1564.0], [76.2, 1564.0], [76.3, 1564.0], [76.4, 1564.0], [76.5, 1564.0], [76.6, 1564.0], [76.7, 1564.0], [76.8, 1564.0], [76.9, 1564.0], [77.0, 1594.0], [77.1, 1594.0], [77.2, 1594.0], [77.3, 1594.0], [77.4, 1594.0], [77.5, 1594.0], [77.6, 1594.0], [77.7, 1594.0], [77.8, 1594.0], [77.9, 1594.0], [78.0, 1663.0], [78.1, 1663.0], [78.2, 1663.0], [78.3, 1663.0], [78.4, 1663.0], [78.5, 1663.0], [78.6, 1663.0], [78.7, 1663.0], [78.8, 1663.0], [78.9, 1663.0], [79.0, 1671.0], [79.1, 1671.0], [79.2, 1671.0], [79.3, 1671.0], [79.4, 1671.0], [79.5, 1671.0], [79.6, 1671.0], [79.7, 1671.0], [79.8, 1671.0], [79.9, 1671.0], [80.0, 1701.0], [80.1, 1701.0], [80.2, 1701.0], [80.3, 1701.0], [80.4, 1701.0], [80.5, 1701.0], [80.6, 1701.0], [80.7, 1701.0], [80.8, 1701.0], [80.9, 1701.0], [81.0, 1731.0], [81.1, 1731.0], [81.2, 1731.0], [81.3, 1731.0], [81.4, 1731.0], [81.5, 1731.0], [81.6, 1731.0], [81.7, 1731.0], [81.8, 1731.0], [81.9, 1731.0], [82.0, 1744.0], [82.1, 1744.0], [82.2, 1744.0], [82.3, 1744.0], [82.4, 1744.0], [82.5, 1744.0], [82.6, 1744.0], [82.7, 1744.0], [82.8, 1744.0], [82.9, 1744.0], [83.0, 1754.0], [83.1, 1754.0], [83.2, 1754.0], [83.3, 1754.0], [83.4, 1754.0], [83.5, 1754.0], [83.6, 1754.0], [83.7, 1754.0], [83.8, 1754.0], [83.9, 1754.0], [84.0, 1789.0], [84.1, 1789.0], [84.2, 1789.0], [84.3, 1789.0], [84.4, 1789.0], [84.5, 1789.0], [84.6, 1789.0], [84.7, 1789.0], [84.8, 1789.0], [84.9, 1789.0], [85.0, 1797.0], [85.1, 1797.0], [85.2, 1797.0], [85.3, 1797.0], [85.4, 1797.0], [85.5, 1797.0], [85.6, 1797.0], [85.7, 1797.0], [85.8, 1797.0], [85.9, 1797.0], [86.0, 1861.0], [86.1, 1861.0], [86.2, 1861.0], [86.3, 1861.0], [86.4, 1861.0], [86.5, 1861.0], [86.6, 1861.0], [86.7, 1861.0], [86.8, 1861.0], [86.9, 1861.0], [87.0, 1864.0], [87.1, 1864.0], [87.2, 1864.0], [87.3, 1864.0], [87.4, 1864.0], [87.5, 1864.0], [87.6, 1864.0], [87.7, 1864.0], [87.8, 1864.0], [87.9, 1864.0], [88.0, 1898.0], [88.1, 1898.0], [88.2, 1898.0], [88.3, 1898.0], [88.4, 1898.0], [88.5, 1898.0], [88.6, 1898.0], [88.7, 1898.0], [88.8, 1898.0], [88.9, 1898.0], [89.0, 1957.0], [89.1, 1957.0], [89.2, 1957.0], [89.3, 1957.0], [89.4, 1957.0], [89.5, 1957.0], [89.6, 1957.0], [89.7, 1957.0], [89.8, 1957.0], [89.9, 1957.0], [90.0, 2005.0], [90.1, 2005.0], [90.2, 2005.0], [90.3, 2005.0], [90.4, 2005.0], [90.5, 2005.0], [90.6, 2005.0], [90.7, 2005.0], [90.8, 2005.0], [90.9, 2005.0], [91.0, 2009.0], [91.1, 2009.0], [91.2, 2009.0], [91.3, 2009.0], [91.4, 2009.0], [91.5, 2009.0], [91.6, 2009.0], [91.7, 2009.0], [91.8, 2009.0], [91.9, 2009.0], [92.0, 2070.0], [92.1, 2070.0], [92.2, 2070.0], [92.3, 2070.0], [92.4, 2070.0], [92.5, 2070.0], [92.6, 2070.0], [92.7, 2070.0], [92.8, 2070.0], [92.9, 2070.0], [93.0, 2156.0], [93.1, 2156.0], [93.2, 2156.0], [93.3, 2156.0], [93.4, 2156.0], [93.5, 2156.0], [93.6, 2156.0], [93.7, 2156.0], [93.8, 2156.0], [93.9, 2156.0], [94.0, 2202.0], [94.1, 2202.0], [94.2, 2202.0], [94.3, 2202.0], [94.4, 2202.0], [94.5, 2202.0], [94.6, 2202.0], [94.7, 2202.0], [94.8, 2202.0], [94.9, 2202.0], [95.0, 2245.0], [95.1, 2245.0], [95.2, 2245.0], [95.3, 2245.0], [95.4, 2245.0], [95.5, 2245.0], [95.6, 2245.0], [95.7, 2245.0], [95.8, 2245.0], [95.9, 2245.0], [96.0, 2261.0], [96.1, 2261.0], [96.2, 2261.0], [96.3, 2261.0], [96.4, 2261.0], [96.5, 2261.0], [96.6, 2261.0], [96.7, 2261.0], [96.8, 2261.0], [96.9, 2261.0], [97.0, 3099.0], [97.1, 3099.0], [97.2, 3099.0], [97.3, 3099.0], [97.4, 3099.0], [97.5, 3099.0], [97.6, 3099.0], [97.7, 3099.0], [97.8, 3099.0], [97.9, 3099.0], [98.0, 3101.0], [98.1, 3101.0], [98.2, 3101.0], [98.3, 3101.0], [98.4, 3101.0], [98.5, 3101.0], [98.6, 3101.0], [98.7, 3101.0], [98.8, 3101.0], [98.9, 3101.0], [99.0, 3125.0], [99.1, 3125.0], [99.2, 3125.0], [99.3, 3125.0], [99.4, 3125.0], [99.5, 3125.0], [99.6, 3125.0], [99.7, 3125.0], [99.8, 3125.0], [99.9, 3125.0]], "isOverall": false, "label": "https://app.quickconnect.biz/api/api/v1/conversations?page=1&perPage=20", "isController": false}, {"data": [[0.0, 692.0], [0.1, 692.0], [0.2, 692.0], [0.3, 692.0], [0.4, 692.0], [0.5, 692.0], [0.6, 692.0], [0.7, 692.0], [0.8, 692.0], [0.9, 692.0], [1.0, 712.0], [1.1, 712.0], [1.2, 712.0], [1.3, 712.0], [1.4, 712.0], [1.5, 712.0], [1.6, 712.0], [1.7, 712.0], [1.8, 712.0], [1.9, 712.0], [2.0, 871.0], [2.1, 871.0], [2.2, 871.0], [2.3, 871.0], [2.4, 871.0], [2.5, 871.0], [2.6, 871.0], [2.7, 871.0], [2.8, 871.0], [2.9, 871.0], [3.0, 892.0], [3.1, 892.0], [3.2, 892.0], [3.3, 892.0], [3.4, 892.0], [3.5, 892.0], [3.6, 892.0], [3.7, 892.0], [3.8, 892.0], [3.9, 892.0], [4.0, 897.0], [4.1, 897.0], [4.2, 897.0], [4.3, 897.0], [4.4, 897.0], [4.5, 897.0], [4.6, 897.0], [4.7, 897.0], [4.8, 897.0], [4.9, 897.0], [5.0, 949.0], [5.1, 949.0], [5.2, 949.0], [5.3, 949.0], [5.4, 949.0], [5.5, 949.0], [5.6, 949.0], [5.7, 949.0], [5.8, 949.0], [5.9, 949.0], [6.0, 1059.0], [6.1, 1059.0], [6.2, 1059.0], [6.3, 1059.0], [6.4, 1059.0], [6.5, 1059.0], [6.6, 1059.0], [6.7, 1059.0], [6.8, 1059.0], [6.9, 1059.0], [7.0, 1062.0], [7.1, 1062.0], [7.2, 1062.0], [7.3, 1062.0], [7.4, 1062.0], [7.5, 1062.0], [7.6, 1062.0], [7.7, 1062.0], [7.8, 1062.0], [7.9, 1062.0], [8.0, 1078.0], [8.1, 1078.0], [8.2, 1078.0], [8.3, 1078.0], [8.4, 1078.0], [8.5, 1078.0], [8.6, 1078.0], [8.7, 1078.0], [8.8, 1078.0], [8.9, 1078.0], [9.0, 1107.0], [9.1, 1107.0], [9.2, 1107.0], [9.3, 1107.0], [9.4, 1107.0], [9.5, 1107.0], [9.6, 1107.0], [9.7, 1107.0], [9.8, 1107.0], [9.9, 1107.0], [10.0, 1183.0], [10.1, 1183.0], [10.2, 1183.0], [10.3, 1183.0], [10.4, 1183.0], [10.5, 1183.0], [10.6, 1183.0], [10.7, 1183.0], [10.8, 1183.0], [10.9, 1183.0], [11.0, 1231.0], [11.1, 1231.0], [11.2, 1231.0], [11.3, 1231.0], [11.4, 1231.0], [11.5, 1231.0], [11.6, 1231.0], [11.7, 1231.0], [11.8, 1231.0], [11.9, 1231.0], [12.0, 1233.0], [12.1, 1233.0], [12.2, 1233.0], [12.3, 1233.0], [12.4, 1233.0], [12.5, 1233.0], [12.6, 1233.0], [12.7, 1233.0], [12.8, 1233.0], [12.9, 1233.0], [13.0, 1275.0], [13.1, 1275.0], [13.2, 1275.0], [13.3, 1275.0], [13.4, 1275.0], [13.5, 1275.0], [13.6, 1275.0], [13.7, 1275.0], [13.8, 1275.0], [13.9, 1275.0], [14.0, 1344.0], [14.1, 1344.0], [14.2, 1344.0], [14.3, 1344.0], [14.4, 1344.0], [14.5, 1344.0], [14.6, 1344.0], [14.7, 1344.0], [14.8, 1344.0], [14.9, 1344.0], [15.0, 1366.0], [15.1, 1366.0], [15.2, 1366.0], [15.3, 1366.0], [15.4, 1366.0], [15.5, 1366.0], [15.6, 1366.0], [15.7, 1366.0], [15.8, 1366.0], [15.9, 1366.0], [16.0, 1426.0], [16.1, 1426.0], [16.2, 1426.0], [16.3, 1426.0], [16.4, 1426.0], [16.5, 1426.0], [16.6, 1426.0], [16.7, 1426.0], [16.8, 1426.0], [16.9, 1426.0], [17.0, 1443.0], [17.1, 1443.0], [17.2, 1443.0], [17.3, 1443.0], [17.4, 1443.0], [17.5, 1443.0], [17.6, 1443.0], [17.7, 1443.0], [17.8, 1443.0], [17.9, 1443.0], [18.0, 1446.0], [18.1, 1446.0], [18.2, 1446.0], [18.3, 1446.0], [18.4, 1446.0], [18.5, 1446.0], [18.6, 1446.0], [18.7, 1446.0], [18.8, 1446.0], [18.9, 1446.0], [19.0, 1484.0], [19.1, 1484.0], [19.2, 1484.0], [19.3, 1484.0], [19.4, 1484.0], [19.5, 1484.0], [19.6, 1484.0], [19.7, 1484.0], [19.8, 1484.0], [19.9, 1484.0], [20.0, 1555.0], [20.1, 1555.0], [20.2, 1555.0], [20.3, 1555.0], [20.4, 1555.0], [20.5, 1555.0], [20.6, 1555.0], [20.7, 1555.0], [20.8, 1555.0], [20.9, 1555.0], [21.0, 1582.0], [21.1, 1582.0], [21.2, 1582.0], [21.3, 1582.0], [21.4, 1582.0], [21.5, 1582.0], [21.6, 1582.0], [21.7, 1582.0], [21.8, 1582.0], [21.9, 1582.0], [22.0, 1597.0], [22.1, 1597.0], [22.2, 1597.0], [22.3, 1597.0], [22.4, 1597.0], [22.5, 1597.0], [22.6, 1597.0], [22.7, 1597.0], [22.8, 1597.0], [22.9, 1597.0], [23.0, 1620.0], [23.1, 1620.0], [23.2, 1620.0], [23.3, 1620.0], [23.4, 1620.0], [23.5, 1620.0], [23.6, 1620.0], [23.7, 1620.0], [23.8, 1620.0], [23.9, 1620.0], [24.0, 1626.0], [24.1, 1626.0], [24.2, 1626.0], [24.3, 1626.0], [24.4, 1626.0], [24.5, 1626.0], [24.6, 1626.0], [24.7, 1626.0], [24.8, 1626.0], [24.9, 1626.0], [25.0, 1642.0], [25.1, 1642.0], [25.2, 1642.0], [25.3, 1642.0], [25.4, 1642.0], [25.5, 1642.0], [25.6, 1642.0], [25.7, 1642.0], [25.8, 1642.0], [25.9, 1642.0], [26.0, 1667.0], [26.1, 1667.0], [26.2, 1667.0], [26.3, 1667.0], [26.4, 1667.0], [26.5, 1667.0], [26.6, 1667.0], [26.7, 1667.0], [26.8, 1667.0], [26.9, 1667.0], [27.0, 1686.0], [27.1, 1686.0], [27.2, 1686.0], [27.3, 1686.0], [27.4, 1686.0], [27.5, 1686.0], [27.6, 1686.0], [27.7, 1686.0], [27.8, 1686.0], [27.9, 1686.0], [28.0, 1761.0], [28.1, 1761.0], [28.2, 1761.0], [28.3, 1761.0], [28.4, 1761.0], [28.5, 1761.0], [28.6, 1761.0], [28.7, 1761.0], [28.8, 1761.0], [28.9, 1761.0], [29.0, 1796.0], [29.1, 1796.0], [29.2, 1796.0], [29.3, 1796.0], [29.4, 1796.0], [29.5, 1796.0], [29.6, 1796.0], [29.7, 1796.0], [29.8, 1796.0], [29.9, 1796.0], [30.0, 1815.0], [30.1, 1815.0], [30.2, 1815.0], [30.3, 1815.0], [30.4, 1815.0], [30.5, 1815.0], [30.6, 1815.0], [30.7, 1815.0], [30.8, 1815.0], [30.9, 1815.0], [31.0, 1824.0], [31.1, 1824.0], [31.2, 1824.0], [31.3, 1824.0], [31.4, 1824.0], [31.5, 1824.0], [31.6, 1824.0], [31.7, 1824.0], [31.8, 1824.0], [31.9, 1824.0], [32.0, 1825.0], [32.1, 1825.0], [32.2, 1825.0], [32.3, 1825.0], [32.4, 1825.0], [32.5, 1825.0], [32.6, 1825.0], [32.7, 1825.0], [32.8, 1825.0], [32.9, 1825.0], [33.0, 1860.0], [33.1, 1860.0], [33.2, 1860.0], [33.3, 1860.0], [33.4, 1860.0], [33.5, 1860.0], [33.6, 1860.0], [33.7, 1860.0], [33.8, 1860.0], [33.9, 1860.0], [34.0, 1862.0], [34.1, 1862.0], [34.2, 1862.0], [34.3, 1862.0], [34.4, 1862.0], [34.5, 1862.0], [34.6, 1862.0], [34.7, 1862.0], [34.8, 1862.0], [34.9, 1862.0], [35.0, 1872.0], [35.1, 1872.0], [35.2, 1872.0], [35.3, 1872.0], [35.4, 1872.0], [35.5, 1872.0], [35.6, 1872.0], [35.7, 1872.0], [35.8, 1872.0], [35.9, 1872.0], [36.0, 1875.0], [36.1, 1875.0], [36.2, 1875.0], [36.3, 1875.0], [36.4, 1875.0], [36.5, 1875.0], [36.6, 1875.0], [36.7, 1875.0], [36.8, 1875.0], [36.9, 1875.0], [37.0, 1887.0], [37.1, 1887.0], [37.2, 1887.0], [37.3, 1887.0], [37.4, 1887.0], [37.5, 1887.0], [37.6, 1887.0], [37.7, 1887.0], [37.8, 1887.0], [37.9, 1887.0], [38.0, 1899.0], [38.1, 1899.0], [38.2, 1899.0], [38.3, 1899.0], [38.4, 1899.0], [38.5, 1899.0], [38.6, 1899.0], [38.7, 1899.0], [38.8, 1899.0], [38.9, 1899.0], [39.0, 1918.0], [39.1, 1918.0], [39.2, 1918.0], [39.3, 1918.0], [39.4, 1918.0], [39.5, 1918.0], [39.6, 1918.0], [39.7, 1918.0], [39.8, 1918.0], [39.9, 1918.0], [40.0, 1934.0], [40.1, 1934.0], [40.2, 1934.0], [40.3, 1934.0], [40.4, 1934.0], [40.5, 1934.0], [40.6, 1934.0], [40.7, 1934.0], [40.8, 1934.0], [40.9, 1934.0], [41.0, 1993.0], [41.1, 1993.0], [41.2, 1993.0], [41.3, 1993.0], [41.4, 1993.0], [41.5, 1993.0], [41.6, 1993.0], [41.7, 1993.0], [41.8, 1993.0], [41.9, 1993.0], [42.0, 1997.0], [42.1, 1997.0], [42.2, 1997.0], [42.3, 1997.0], [42.4, 1997.0], [42.5, 1997.0], [42.6, 1997.0], [42.7, 1997.0], [42.8, 1997.0], [42.9, 1997.0], [43.0, 2000.0], [43.1, 2000.0], [43.2, 2000.0], [43.3, 2000.0], [43.4, 2000.0], [43.5, 2000.0], [43.6, 2000.0], [43.7, 2000.0], [43.8, 2000.0], [43.9, 2000.0], [44.0, 2026.0], [44.1, 2026.0], [44.2, 2026.0], [44.3, 2026.0], [44.4, 2026.0], [44.5, 2026.0], [44.6, 2026.0], [44.7, 2026.0], [44.8, 2026.0], [44.9, 2026.0], [45.0, 2078.0], [45.1, 2078.0], [45.2, 2078.0], [45.3, 2078.0], [45.4, 2078.0], [45.5, 2078.0], [45.6, 2078.0], [45.7, 2078.0], [45.8, 2078.0], [45.9, 2078.0], [46.0, 2084.0], [46.1, 2084.0], [46.2, 2084.0], [46.3, 2084.0], [46.4, 2084.0], [46.5, 2084.0], [46.6, 2084.0], [46.7, 2084.0], [46.8, 2084.0], [46.9, 2084.0], [47.0, 2090.0], [47.1, 2090.0], [47.2, 2090.0], [47.3, 2090.0], [47.4, 2090.0], [47.5, 2090.0], [47.6, 2090.0], [47.7, 2090.0], [47.8, 2090.0], [47.9, 2090.0], [48.0, 2096.0], [48.1, 2096.0], [48.2, 2096.0], [48.3, 2096.0], [48.4, 2096.0], [48.5, 2096.0], [48.6, 2096.0], [48.7, 2096.0], [48.8, 2096.0], [48.9, 2096.0], [49.0, 2102.0], [49.1, 2102.0], [49.2, 2102.0], [49.3, 2102.0], [49.4, 2102.0], [49.5, 2102.0], [49.6, 2102.0], [49.7, 2102.0], [49.8, 2102.0], [49.9, 2102.0], [50.0, 2142.0], [50.1, 2142.0], [50.2, 2142.0], [50.3, 2142.0], [50.4, 2142.0], [50.5, 2142.0], [50.6, 2142.0], [50.7, 2142.0], [50.8, 2142.0], [50.9, 2142.0], [51.0, 2187.0], [51.1, 2187.0], [51.2, 2187.0], [51.3, 2187.0], [51.4, 2187.0], [51.5, 2187.0], [51.6, 2187.0], [51.7, 2187.0], [51.8, 2187.0], [51.9, 2187.0], [52.0, 2191.0], [52.1, 2191.0], [52.2, 2191.0], [52.3, 2191.0], [52.4, 2191.0], [52.5, 2191.0], [52.6, 2191.0], [52.7, 2191.0], [52.8, 2191.0], [52.9, 2191.0], [53.0, 2192.0], [53.1, 2192.0], [53.2, 2192.0], [53.3, 2192.0], [53.4, 2192.0], [53.5, 2192.0], [53.6, 2192.0], [53.7, 2192.0], [53.8, 2192.0], [53.9, 2192.0], [54.0, 2203.0], [54.1, 2203.0], [54.2, 2203.0], [54.3, 2203.0], [54.4, 2203.0], [54.5, 2203.0], [54.6, 2203.0], [54.7, 2203.0], [54.8, 2203.0], [54.9, 2203.0], [55.0, 2247.0], [55.1, 2247.0], [55.2, 2247.0], [55.3, 2247.0], [55.4, 2247.0], [55.5, 2247.0], [55.6, 2247.0], [55.7, 2247.0], [55.8, 2247.0], [55.9, 2247.0], [56.0, 2257.0], [56.1, 2257.0], [56.2, 2257.0], [56.3, 2257.0], [56.4, 2257.0], [56.5, 2257.0], [56.6, 2257.0], [56.7, 2257.0], [56.8, 2257.0], [56.9, 2257.0], [57.0, 2261.0], [57.1, 2261.0], [57.2, 2261.0], [57.3, 2261.0], [57.4, 2261.0], [57.5, 2261.0], [57.6, 2261.0], [57.7, 2261.0], [57.8, 2261.0], [57.9, 2261.0], [58.0, 2267.0], [58.1, 2267.0], [58.2, 2267.0], [58.3, 2267.0], [58.4, 2267.0], [58.5, 2267.0], [58.6, 2267.0], [58.7, 2267.0], [58.8, 2267.0], [58.9, 2267.0], [59.0, 2286.0], [59.1, 2286.0], [59.2, 2286.0], [59.3, 2286.0], [59.4, 2286.0], [59.5, 2286.0], [59.6, 2286.0], [59.7, 2286.0], [59.8, 2286.0], [59.9, 2286.0], [60.0, 2292.0], [60.1, 2292.0], [60.2, 2292.0], [60.3, 2292.0], [60.4, 2292.0], [60.5, 2292.0], [60.6, 2292.0], [60.7, 2292.0], [60.8, 2292.0], [60.9, 2292.0], [61.0, 2309.0], [61.1, 2309.0], [61.2, 2309.0], [61.3, 2309.0], [61.4, 2309.0], [61.5, 2309.0], [61.6, 2309.0], [61.7, 2309.0], [61.8, 2309.0], [61.9, 2309.0], [62.0, 2340.0], [62.1, 2340.0], [62.2, 2340.0], [62.3, 2340.0], [62.4, 2340.0], [62.5, 2340.0], [62.6, 2340.0], [62.7, 2340.0], [62.8, 2340.0], [62.9, 2340.0], [63.0, 2348.0], [63.1, 2348.0], [63.2, 2348.0], [63.3, 2348.0], [63.4, 2348.0], [63.5, 2348.0], [63.6, 2348.0], [63.7, 2348.0], [63.8, 2348.0], [63.9, 2348.0], [64.0, 2390.0], [64.1, 2390.0], [64.2, 2390.0], [64.3, 2390.0], [64.4, 2390.0], [64.5, 2390.0], [64.6, 2390.0], [64.7, 2390.0], [64.8, 2390.0], [64.9, 2390.0], [65.0, 2390.0], [65.1, 2390.0], [65.2, 2390.0], [65.3, 2390.0], [65.4, 2390.0], [65.5, 2390.0], [65.6, 2390.0], [65.7, 2390.0], [65.8, 2390.0], [65.9, 2390.0], [66.0, 2393.0], [66.1, 2393.0], [66.2, 2393.0], [66.3, 2393.0], [66.4, 2393.0], [66.5, 2393.0], [66.6, 2393.0], [66.7, 2393.0], [66.8, 2393.0], [66.9, 2393.0], [67.0, 2399.0], [67.1, 2399.0], [67.2, 2399.0], [67.3, 2399.0], [67.4, 2399.0], [67.5, 2399.0], [67.6, 2399.0], [67.7, 2399.0], [67.8, 2399.0], [67.9, 2399.0], [68.0, 2399.0], [68.1, 2399.0], [68.2, 2399.0], [68.3, 2399.0], [68.4, 2399.0], [68.5, 2399.0], [68.6, 2399.0], [68.7, 2399.0], [68.8, 2399.0], [68.9, 2399.0], [69.0, 2418.0], [69.1, 2418.0], [69.2, 2418.0], [69.3, 2418.0], [69.4, 2418.0], [69.5, 2418.0], [69.6, 2418.0], [69.7, 2418.0], [69.8, 2418.0], [69.9, 2418.0], [70.0, 2443.0], [70.1, 2443.0], [70.2, 2443.0], [70.3, 2443.0], [70.4, 2443.0], [70.5, 2443.0], [70.6, 2443.0], [70.7, 2443.0], [70.8, 2443.0], [70.9, 2443.0], [71.0, 2444.0], [71.1, 2444.0], [71.2, 2444.0], [71.3, 2444.0], [71.4, 2444.0], [71.5, 2444.0], [71.6, 2444.0], [71.7, 2444.0], [71.8, 2444.0], [71.9, 2444.0], [72.0, 2451.0], [72.1, 2451.0], [72.2, 2451.0], [72.3, 2451.0], [72.4, 2451.0], [72.5, 2451.0], [72.6, 2451.0], [72.7, 2451.0], [72.8, 2451.0], [72.9, 2451.0], [73.0, 2451.0], [73.1, 2451.0], [73.2, 2451.0], [73.3, 2451.0], [73.4, 2451.0], [73.5, 2451.0], [73.6, 2451.0], [73.7, 2451.0], [73.8, 2451.0], [73.9, 2451.0], [74.0, 2457.0], [74.1, 2457.0], [74.2, 2457.0], [74.3, 2457.0], [74.4, 2457.0], [74.5, 2457.0], [74.6, 2457.0], [74.7, 2457.0], [74.8, 2457.0], [74.9, 2457.0], [75.0, 2464.0], [75.1, 2464.0], [75.2, 2464.0], [75.3, 2464.0], [75.4, 2464.0], [75.5, 2464.0], [75.6, 2464.0], [75.7, 2464.0], [75.8, 2464.0], [75.9, 2464.0], [76.0, 2482.0], [76.1, 2482.0], [76.2, 2482.0], [76.3, 2482.0], [76.4, 2482.0], [76.5, 2482.0], [76.6, 2482.0], [76.7, 2482.0], [76.8, 2482.0], [76.9, 2482.0], [77.0, 2496.0], [77.1, 2496.0], [77.2, 2496.0], [77.3, 2496.0], [77.4, 2496.0], [77.5, 2496.0], [77.6, 2496.0], [77.7, 2496.0], [77.8, 2496.0], [77.9, 2496.0], [78.0, 2507.0], [78.1, 2507.0], [78.2, 2507.0], [78.3, 2507.0], [78.4, 2507.0], [78.5, 2507.0], [78.6, 2507.0], [78.7, 2507.0], [78.8, 2507.0], [78.9, 2507.0], [79.0, 2520.0], [79.1, 2520.0], [79.2, 2520.0], [79.3, 2520.0], [79.4, 2520.0], [79.5, 2520.0], [79.6, 2520.0], [79.7, 2520.0], [79.8, 2520.0], [79.9, 2520.0], [80.0, 2529.0], [80.1, 2529.0], [80.2, 2529.0], [80.3, 2529.0], [80.4, 2529.0], [80.5, 2529.0], [80.6, 2529.0], [80.7, 2529.0], [80.8, 2529.0], [80.9, 2529.0], [81.0, 2534.0], [81.1, 2534.0], [81.2, 2534.0], [81.3, 2534.0], [81.4, 2534.0], [81.5, 2534.0], [81.6, 2534.0], [81.7, 2534.0], [81.8, 2534.0], [81.9, 2534.0], [82.0, 2562.0], [82.1, 2562.0], [82.2, 2562.0], [82.3, 2562.0], [82.4, 2562.0], [82.5, 2562.0], [82.6, 2562.0], [82.7, 2562.0], [82.8, 2562.0], [82.9, 2562.0], [83.0, 2567.0], [83.1, 2567.0], [83.2, 2567.0], [83.3, 2567.0], [83.4, 2567.0], [83.5, 2567.0], [83.6, 2567.0], [83.7, 2567.0], [83.8, 2567.0], [83.9, 2567.0], [84.0, 2605.0], [84.1, 2605.0], [84.2, 2605.0], [84.3, 2605.0], [84.4, 2605.0], [84.5, 2605.0], [84.6, 2605.0], [84.7, 2605.0], [84.8, 2605.0], [84.9, 2605.0], [85.0, 2613.0], [85.1, 2613.0], [85.2, 2613.0], [85.3, 2613.0], [85.4, 2613.0], [85.5, 2613.0], [85.6, 2613.0], [85.7, 2613.0], [85.8, 2613.0], [85.9, 2613.0], [86.0, 2668.0], [86.1, 2668.0], [86.2, 2668.0], [86.3, 2668.0], [86.4, 2668.0], [86.5, 2668.0], [86.6, 2668.0], [86.7, 2668.0], [86.8, 2668.0], [86.9, 2668.0], [87.0, 2687.0], [87.1, 2687.0], [87.2, 2687.0], [87.3, 2687.0], [87.4, 2687.0], [87.5, 2687.0], [87.6, 2687.0], [87.7, 2687.0], [87.8, 2687.0], [87.9, 2687.0], [88.0, 2692.0], [88.1, 2692.0], [88.2, 2692.0], [88.3, 2692.0], [88.4, 2692.0], [88.5, 2692.0], [88.6, 2692.0], [88.7, 2692.0], [88.8, 2692.0], [88.9, 2692.0], [89.0, 2702.0], [89.1, 2702.0], [89.2, 2702.0], [89.3, 2702.0], [89.4, 2702.0], [89.5, 2702.0], [89.6, 2702.0], [89.7, 2702.0], [89.8, 2702.0], [89.9, 2702.0], [90.0, 2733.0], [90.1, 2733.0], [90.2, 2733.0], [90.3, 2733.0], [90.4, 2733.0], [90.5, 2733.0], [90.6, 2733.0], [90.7, 2733.0], [90.8, 2733.0], [90.9, 2733.0], [91.0, 2757.0], [91.1, 2757.0], [91.2, 2757.0], [91.3, 2757.0], [91.4, 2757.0], [91.5, 2757.0], [91.6, 2757.0], [91.7, 2757.0], [91.8, 2757.0], [91.9, 2757.0], [92.0, 2764.0], [92.1, 2764.0], [92.2, 2764.0], [92.3, 2764.0], [92.4, 2764.0], [92.5, 2764.0], [92.6, 2764.0], [92.7, 2764.0], [92.8, 2764.0], [92.9, 2764.0], [93.0, 2798.0], [93.1, 2798.0], [93.2, 2798.0], [93.3, 2798.0], [93.4, 2798.0], [93.5, 2798.0], [93.6, 2798.0], [93.7, 2798.0], [93.8, 2798.0], [93.9, 2798.0], [94.0, 2870.0], [94.1, 2870.0], [94.2, 2870.0], [94.3, 2870.0], [94.4, 2870.0], [94.5, 2870.0], [94.6, 2870.0], [94.7, 2870.0], [94.8, 2870.0], [94.9, 2870.0], [95.0, 2901.0], [95.1, 2901.0], [95.2, 2901.0], [95.3, 2901.0], [95.4, 2901.0], [95.5, 2901.0], [95.6, 2901.0], [95.7, 2901.0], [95.8, 2901.0], [95.9, 2901.0], [96.0, 3046.0], [96.1, 3046.0], [96.2, 3046.0], [96.3, 3046.0], [96.4, 3046.0], [96.5, 3046.0], [96.6, 3046.0], [96.7, 3046.0], [96.8, 3046.0], [96.9, 3046.0], [97.0, 3079.0], [97.1, 3079.0], [97.2, 3079.0], [97.3, 3079.0], [97.4, 3079.0], [97.5, 3079.0], [97.6, 3079.0], [97.7, 3079.0], [97.8, 3079.0], [97.9, 3079.0], [98.0, 3192.0], [98.1, 3192.0], [98.2, 3192.0], [98.3, 3192.0], [98.4, 3192.0], [98.5, 3192.0], [98.6, 3192.0], [98.7, 3192.0], [98.8, 3192.0], [98.9, 3192.0], [99.0, 3488.0], [99.1, 3488.0], [99.2, 3488.0], [99.3, 3488.0], [99.4, 3488.0], [99.5, 3488.0], [99.6, 3488.0], [99.7, 3488.0], [99.8, 3488.0], [99.9, 3488.0]], "isOverall": false, "label": "https://app.quickconnect.biz/api/api/v1/campaigns/latest-campaigns-with-delivery-stats", "isController": false}, {"data": [[0.0, 2985.0], [0.1, 2985.0], [0.2, 2985.0], [0.3, 2985.0], [0.4, 2985.0], [0.5, 2985.0], [0.6, 2985.0], [0.7, 2985.0], [0.8, 2985.0], [0.9, 2985.0], [1.0, 3026.0], [1.1, 3026.0], [1.2, 3026.0], [1.3, 3026.0], [1.4, 3026.0], [1.5, 3026.0], [1.6, 3026.0], [1.7, 3026.0], [1.8, 3026.0], [1.9, 3026.0], [2.0, 3237.0], [2.1, 3237.0], [2.2, 3237.0], [2.3, 3237.0], [2.4, 3237.0], [2.5, 3237.0], [2.6, 3237.0], [2.7, 3237.0], [2.8, 3237.0], [2.9, 3237.0], [3.0, 3321.0], [3.1, 3321.0], [3.2, 3321.0], [3.3, 3321.0], [3.4, 3321.0], [3.5, 3321.0], [3.6, 3321.0], [3.7, 3321.0], [3.8, 3321.0], [3.9, 3321.0], [4.0, 3434.0], [4.1, 3434.0], [4.2, 3434.0], [4.3, 3434.0], [4.4, 3434.0], [4.5, 3434.0], [4.6, 3434.0], [4.7, 3434.0], [4.8, 3434.0], [4.9, 3434.0], [5.0, 3523.0], [5.1, 3523.0], [5.2, 3523.0], [5.3, 3523.0], [5.4, 3523.0], [5.5, 3523.0], [5.6, 3523.0], [5.7, 3523.0], [5.8, 3523.0], [5.9, 3523.0], [6.0, 3763.0], [6.1, 3763.0], [6.2, 3763.0], [6.3, 3763.0], [6.4, 3763.0], [6.5, 3763.0], [6.6, 3763.0], [6.7, 3763.0], [6.8, 3763.0], [6.9, 3763.0], [7.0, 3776.0], [7.1, 3776.0], [7.2, 3776.0], [7.3, 3776.0], [7.4, 3776.0], [7.5, 3776.0], [7.6, 3776.0], [7.7, 3776.0], [7.8, 3776.0], [7.9, 3776.0], [8.0, 3816.0], [8.1, 3816.0], [8.2, 3816.0], [8.3, 3816.0], [8.4, 3816.0], [8.5, 3816.0], [8.6, 3816.0], [8.7, 3816.0], [8.8, 3816.0], [8.9, 3816.0], [9.0, 3818.0], [9.1, 3818.0], [9.2, 3818.0], [9.3, 3818.0], [9.4, 3818.0], [9.5, 3818.0], [9.6, 3818.0], [9.7, 3818.0], [9.8, 3818.0], [9.9, 3818.0], [10.0, 3859.0], [10.1, 3859.0], [10.2, 3859.0], [10.3, 3859.0], [10.4, 3859.0], [10.5, 3859.0], [10.6, 3859.0], [10.7, 3859.0], [10.8, 3859.0], [10.9, 3859.0], [11.0, 3928.0], [11.1, 3928.0], [11.2, 3928.0], [11.3, 3928.0], [11.4, 3928.0], [11.5, 3928.0], [11.6, 3928.0], [11.7, 3928.0], [11.8, 3928.0], [11.9, 3928.0], [12.0, 3968.0], [12.1, 3968.0], [12.2, 3968.0], [12.3, 3968.0], [12.4, 3968.0], [12.5, 3968.0], [12.6, 3968.0], [12.7, 3968.0], [12.8, 3968.0], [12.9, 3968.0], [13.0, 3969.0], [13.1, 3969.0], [13.2, 3969.0], [13.3, 3969.0], [13.4, 3969.0], [13.5, 3969.0], [13.6, 3969.0], [13.7, 3969.0], [13.8, 3969.0], [13.9, 3969.0], [14.0, 3982.0], [14.1, 3982.0], [14.2, 3982.0], [14.3, 3982.0], [14.4, 3982.0], [14.5, 3982.0], [14.6, 3982.0], [14.7, 3982.0], [14.8, 3982.0], [14.9, 3982.0], [15.0, 4090.0], [15.1, 4090.0], [15.2, 4090.0], [15.3, 4090.0], [15.4, 4090.0], [15.5, 4090.0], [15.6, 4090.0], [15.7, 4090.0], [15.8, 4090.0], [15.9, 4090.0], [16.0, 4111.0], [16.1, 4111.0], [16.2, 4111.0], [16.3, 4111.0], [16.4, 4111.0], [16.5, 4111.0], [16.6, 4111.0], [16.7, 4111.0], [16.8, 4111.0], [16.9, 4111.0], [17.0, 4215.0], [17.1, 4215.0], [17.2, 4215.0], [17.3, 4215.0], [17.4, 4215.0], [17.5, 4215.0], [17.6, 4215.0], [17.7, 4215.0], [17.8, 4215.0], [17.9, 4215.0], [18.0, 4248.0], [18.1, 4248.0], [18.2, 4248.0], [18.3, 4248.0], [18.4, 4248.0], [18.5, 4248.0], [18.6, 4248.0], [18.7, 4248.0], [18.8, 4248.0], [18.9, 4248.0], [19.0, 4281.0], [19.1, 4281.0], [19.2, 4281.0], [19.3, 4281.0], [19.4, 4281.0], [19.5, 4281.0], [19.6, 4281.0], [19.7, 4281.0], [19.8, 4281.0], [19.9, 4281.0], [20.0, 4289.0], [20.1, 4289.0], [20.2, 4289.0], [20.3, 4289.0], [20.4, 4289.0], [20.5, 4289.0], [20.6, 4289.0], [20.7, 4289.0], [20.8, 4289.0], [20.9, 4289.0], [21.0, 4441.0], [21.1, 4441.0], [21.2, 4441.0], [21.3, 4441.0], [21.4, 4441.0], [21.5, 4441.0], [21.6, 4441.0], [21.7, 4441.0], [21.8, 4441.0], [21.9, 4441.0], [22.0, 4460.0], [22.1, 4460.0], [22.2, 4460.0], [22.3, 4460.0], [22.4, 4460.0], [22.5, 4460.0], [22.6, 4460.0], [22.7, 4460.0], [22.8, 4460.0], [22.9, 4460.0], [23.0, 4496.0], [23.1, 4496.0], [23.2, 4496.0], [23.3, 4496.0], [23.4, 4496.0], [23.5, 4496.0], [23.6, 4496.0], [23.7, 4496.0], [23.8, 4496.0], [23.9, 4496.0], [24.0, 4498.0], [24.1, 4498.0], [24.2, 4498.0], [24.3, 4498.0], [24.4, 4498.0], [24.5, 4498.0], [24.6, 4498.0], [24.7, 4498.0], [24.8, 4498.0], [24.9, 4498.0], [25.0, 4562.0], [25.1, 4562.0], [25.2, 4562.0], [25.3, 4562.0], [25.4, 4562.0], [25.5, 4562.0], [25.6, 4562.0], [25.7, 4562.0], [25.8, 4562.0], [25.9, 4562.0], [26.0, 4573.0], [26.1, 4573.0], [26.2, 4573.0], [26.3, 4573.0], [26.4, 4573.0], [26.5, 4573.0], [26.6, 4573.0], [26.7, 4573.0], [26.8, 4573.0], [26.9, 4573.0], [27.0, 4604.0], [27.1, 4604.0], [27.2, 4604.0], [27.3, 4604.0], [27.4, 4604.0], [27.5, 4604.0], [27.6, 4604.0], [27.7, 4604.0], [27.8, 4604.0], [27.9, 4604.0], [28.0, 4624.0], [28.1, 4624.0], [28.2, 4624.0], [28.3, 4624.0], [28.4, 4624.0], [28.5, 4624.0], [28.6, 4624.0], [28.7, 4624.0], [28.8, 4624.0], [28.9, 4624.0], [29.0, 4661.0], [29.1, 4661.0], [29.2, 4661.0], [29.3, 4661.0], [29.4, 4661.0], [29.5, 4661.0], [29.6, 4661.0], [29.7, 4661.0], [29.8, 4661.0], [29.9, 4661.0], [30.0, 4681.0], [30.1, 4681.0], [30.2, 4681.0], [30.3, 4681.0], [30.4, 4681.0], [30.5, 4681.0], [30.6, 4681.0], [30.7, 4681.0], [30.8, 4681.0], [30.9, 4681.0], [31.0, 4700.0], [31.1, 4700.0], [31.2, 4700.0], [31.3, 4700.0], [31.4, 4700.0], [31.5, 4700.0], [31.6, 4700.0], [31.7, 4700.0], [31.8, 4700.0], [31.9, 4700.0], [32.0, 4708.0], [32.1, 4708.0], [32.2, 4708.0], [32.3, 4708.0], [32.4, 4708.0], [32.5, 4708.0], [32.6, 4708.0], [32.7, 4708.0], [32.8, 4708.0], [32.9, 4708.0], [33.0, 4733.0], [33.1, 4733.0], [33.2, 4733.0], [33.3, 4733.0], [33.4, 4733.0], [33.5, 4733.0], [33.6, 4733.0], [33.7, 4733.0], [33.8, 4733.0], [33.9, 4733.0], [34.0, 4762.0], [34.1, 4762.0], [34.2, 4762.0], [34.3, 4762.0], [34.4, 4762.0], [34.5, 4762.0], [34.6, 4762.0], [34.7, 4762.0], [34.8, 4762.0], [34.9, 4762.0], [35.0, 4767.0], [35.1, 4767.0], [35.2, 4767.0], [35.3, 4767.0], [35.4, 4767.0], [35.5, 4767.0], [35.6, 4767.0], [35.7, 4767.0], [35.8, 4767.0], [35.9, 4767.0], [36.0, 4791.0], [36.1, 4791.0], [36.2, 4791.0], [36.3, 4791.0], [36.4, 4791.0], [36.5, 4791.0], [36.6, 4791.0], [36.7, 4791.0], [36.8, 4791.0], [36.9, 4791.0], [37.0, 4811.0], [37.1, 4811.0], [37.2, 4811.0], [37.3, 4811.0], [37.4, 4811.0], [37.5, 4811.0], [37.6, 4811.0], [37.7, 4811.0], [37.8, 4811.0], [37.9, 4811.0], [38.0, 4830.0], [38.1, 4830.0], [38.2, 4830.0], [38.3, 4830.0], [38.4, 4830.0], [38.5, 4830.0], [38.6, 4830.0], [38.7, 4830.0], [38.8, 4830.0], [38.9, 4830.0], [39.0, 4843.0], [39.1, 4843.0], [39.2, 4843.0], [39.3, 4843.0], [39.4, 4843.0], [39.5, 4843.0], [39.6, 4843.0], [39.7, 4843.0], [39.8, 4843.0], [39.9, 4843.0], [40.0, 4858.0], [40.1, 4858.0], [40.2, 4858.0], [40.3, 4858.0], [40.4, 4858.0], [40.5, 4858.0], [40.6, 4858.0], [40.7, 4858.0], [40.8, 4858.0], [40.9, 4858.0], [41.0, 4902.0], [41.1, 4902.0], [41.2, 4902.0], [41.3, 4902.0], [41.4, 4902.0], [41.5, 4902.0], [41.6, 4902.0], [41.7, 4902.0], [41.8, 4902.0], [41.9, 4902.0], [42.0, 4911.0], [42.1, 4911.0], [42.2, 4911.0], [42.3, 4911.0], [42.4, 4911.0], [42.5, 4911.0], [42.6, 4911.0], [42.7, 4911.0], [42.8, 4911.0], [42.9, 4911.0], [43.0, 4931.0], [43.1, 4931.0], [43.2, 4931.0], [43.3, 4931.0], [43.4, 4931.0], [43.5, 4931.0], [43.6, 4931.0], [43.7, 4931.0], [43.8, 4931.0], [43.9, 4931.0], [44.0, 4940.0], [44.1, 4940.0], [44.2, 4940.0], [44.3, 4940.0], [44.4, 4940.0], [44.5, 4940.0], [44.6, 4940.0], [44.7, 4940.0], [44.8, 4940.0], [44.9, 4940.0], [45.0, 4949.0], [45.1, 4949.0], [45.2, 4949.0], [45.3, 4949.0], [45.4, 4949.0], [45.5, 4949.0], [45.6, 4949.0], [45.7, 4949.0], [45.8, 4949.0], [45.9, 4949.0], [46.0, 4950.0], [46.1, 4950.0], [46.2, 4950.0], [46.3, 4950.0], [46.4, 4950.0], [46.5, 4950.0], [46.6, 4950.0], [46.7, 4950.0], [46.8, 4950.0], [46.9, 4950.0], [47.0, 4958.0], [47.1, 4958.0], [47.2, 4958.0], [47.3, 4958.0], [47.4, 4958.0], [47.5, 4958.0], [47.6, 4958.0], [47.7, 4958.0], [47.8, 4958.0], [47.9, 4958.0], [48.0, 4971.0], [48.1, 4971.0], [48.2, 4971.0], [48.3, 4971.0], [48.4, 4971.0], [48.5, 4971.0], [48.6, 4971.0], [48.7, 4971.0], [48.8, 4971.0], [48.9, 4971.0], [49.0, 4991.0], [49.1, 4991.0], [49.2, 4991.0], [49.3, 4991.0], [49.4, 4991.0], [49.5, 4991.0], [49.6, 4991.0], [49.7, 4991.0], [49.8, 4991.0], [49.9, 4991.0], [50.0, 4993.0], [50.1, 4993.0], [50.2, 4993.0], [50.3, 4993.0], [50.4, 4993.0], [50.5, 4993.0], [50.6, 4993.0], [50.7, 4993.0], [50.8, 4993.0], [50.9, 4993.0], [51.0, 5016.0], [51.1, 5016.0], [51.2, 5016.0], [51.3, 5016.0], [51.4, 5016.0], [51.5, 5016.0], [51.6, 5016.0], [51.7, 5016.0], [51.8, 5016.0], [51.9, 5016.0], [52.0, 5020.0], [52.1, 5020.0], [52.2, 5020.0], [52.3, 5020.0], [52.4, 5020.0], [52.5, 5020.0], [52.6, 5020.0], [52.7, 5020.0], [52.8, 5020.0], [52.9, 5020.0], [53.0, 5043.0], [53.1, 5043.0], [53.2, 5043.0], [53.3, 5043.0], [53.4, 5043.0], [53.5, 5043.0], [53.6, 5043.0], [53.7, 5043.0], [53.8, 5043.0], [53.9, 5043.0], [54.0, 5049.0], [54.1, 5049.0], [54.2, 5049.0], [54.3, 5049.0], [54.4, 5049.0], [54.5, 5049.0], [54.6, 5049.0], [54.7, 5049.0], [54.8, 5049.0], [54.9, 5049.0], [55.0, 5052.0], [55.1, 5052.0], [55.2, 5052.0], [55.3, 5052.0], [55.4, 5052.0], [55.5, 5052.0], [55.6, 5052.0], [55.7, 5052.0], [55.8, 5052.0], [55.9, 5052.0], [56.0, 5081.0], [56.1, 5081.0], [56.2, 5081.0], [56.3, 5081.0], [56.4, 5081.0], [56.5, 5081.0], [56.6, 5081.0], [56.7, 5081.0], [56.8, 5081.0], [56.9, 5081.0], [57.0, 5095.0], [57.1, 5095.0], [57.2, 5095.0], [57.3, 5095.0], [57.4, 5095.0], [57.5, 5095.0], [57.6, 5095.0], [57.7, 5095.0], [57.8, 5095.0], [57.9, 5095.0], [58.0, 5097.0], [58.1, 5097.0], [58.2, 5097.0], [58.3, 5097.0], [58.4, 5097.0], [58.5, 5097.0], [58.6, 5097.0], [58.7, 5097.0], [58.8, 5097.0], [58.9, 5097.0], [59.0, 5102.0], [59.1, 5102.0], [59.2, 5102.0], [59.3, 5102.0], [59.4, 5102.0], [59.5, 5102.0], [59.6, 5102.0], [59.7, 5102.0], [59.8, 5102.0], [59.9, 5102.0], [60.0, 5105.0], [60.1, 5105.0], [60.2, 5105.0], [60.3, 5105.0], [60.4, 5105.0], [60.5, 5105.0], [60.6, 5105.0], [60.7, 5105.0], [60.8, 5105.0], [60.9, 5105.0], [61.0, 5110.0], [61.1, 5110.0], [61.2, 5110.0], [61.3, 5110.0], [61.4, 5110.0], [61.5, 5110.0], [61.6, 5110.0], [61.7, 5110.0], [61.8, 5110.0], [61.9, 5110.0], [62.0, 5128.0], [62.1, 5128.0], [62.2, 5128.0], [62.3, 5128.0], [62.4, 5128.0], [62.5, 5128.0], [62.6, 5128.0], [62.7, 5128.0], [62.8, 5128.0], [62.9, 5128.0], [63.0, 5129.0], [63.1, 5129.0], [63.2, 5129.0], [63.3, 5129.0], [63.4, 5129.0], [63.5, 5129.0], [63.6, 5129.0], [63.7, 5129.0], [63.8, 5129.0], [63.9, 5129.0], [64.0, 5133.0], [64.1, 5133.0], [64.2, 5133.0], [64.3, 5133.0], [64.4, 5133.0], [64.5, 5133.0], [64.6, 5133.0], [64.7, 5133.0], [64.8, 5133.0], [64.9, 5133.0], [65.0, 5144.0], [65.1, 5144.0], [65.2, 5144.0], [65.3, 5144.0], [65.4, 5144.0], [65.5, 5144.0], [65.6, 5144.0], [65.7, 5144.0], [65.8, 5144.0], [65.9, 5144.0], [66.0, 5158.0], [66.1, 5158.0], [66.2, 5158.0], [66.3, 5158.0], [66.4, 5158.0], [66.5, 5158.0], [66.6, 5158.0], [66.7, 5158.0], [66.8, 5158.0], [66.9, 5158.0], [67.0, 5168.0], [67.1, 5168.0], [67.2, 5168.0], [67.3, 5168.0], [67.4, 5168.0], [67.5, 5168.0], [67.6, 5168.0], [67.7, 5168.0], [67.8, 5168.0], [67.9, 5168.0], [68.0, 5207.0], [68.1, 5207.0], [68.2, 5207.0], [68.3, 5207.0], [68.4, 5207.0], [68.5, 5207.0], [68.6, 5207.0], [68.7, 5207.0], [68.8, 5207.0], [68.9, 5207.0], [69.0, 5211.0], [69.1, 5211.0], [69.2, 5211.0], [69.3, 5211.0], [69.4, 5211.0], [69.5, 5211.0], [69.6, 5211.0], [69.7, 5211.0], [69.8, 5211.0], [69.9, 5211.0], [70.0, 5222.0], [70.1, 5222.0], [70.2, 5222.0], [70.3, 5222.0], [70.4, 5222.0], [70.5, 5222.0], [70.6, 5222.0], [70.7, 5222.0], [70.8, 5222.0], [70.9, 5222.0], [71.0, 5224.0], [71.1, 5224.0], [71.2, 5224.0], [71.3, 5224.0], [71.4, 5224.0], [71.5, 5224.0], [71.6, 5224.0], [71.7, 5224.0], [71.8, 5224.0], [71.9, 5224.0], [72.0, 5241.0], [72.1, 5241.0], [72.2, 5241.0], [72.3, 5241.0], [72.4, 5241.0], [72.5, 5241.0], [72.6, 5241.0], [72.7, 5241.0], [72.8, 5241.0], [72.9, 5241.0], [73.0, 5279.0], [73.1, 5279.0], [73.2, 5279.0], [73.3, 5279.0], [73.4, 5279.0], [73.5, 5279.0], [73.6, 5279.0], [73.7, 5279.0], [73.8, 5279.0], [73.9, 5279.0], [74.0, 5292.0], [74.1, 5292.0], [74.2, 5292.0], [74.3, 5292.0], [74.4, 5292.0], [74.5, 5292.0], [74.6, 5292.0], [74.7, 5292.0], [74.8, 5292.0], [74.9, 5292.0], [75.0, 5292.0], [75.1, 5292.0], [75.2, 5292.0], [75.3, 5292.0], [75.4, 5292.0], [75.5, 5292.0], [75.6, 5292.0], [75.7, 5292.0], [75.8, 5292.0], [75.9, 5292.0], [76.0, 5293.0], [76.1, 5293.0], [76.2, 5293.0], [76.3, 5293.0], [76.4, 5293.0], [76.5, 5293.0], [76.6, 5293.0], [76.7, 5293.0], [76.8, 5293.0], [76.9, 5293.0], [77.0, 5307.0], [77.1, 5307.0], [77.2, 5307.0], [77.3, 5307.0], [77.4, 5307.0], [77.5, 5307.0], [77.6, 5307.0], [77.7, 5307.0], [77.8, 5307.0], [77.9, 5307.0], [78.0, 5310.0], [78.1, 5310.0], [78.2, 5310.0], [78.3, 5310.0], [78.4, 5310.0], [78.5, 5310.0], [78.6, 5310.0], [78.7, 5310.0], [78.8, 5310.0], [78.9, 5310.0], [79.0, 5317.0], [79.1, 5317.0], [79.2, 5317.0], [79.3, 5317.0], [79.4, 5317.0], [79.5, 5317.0], [79.6, 5317.0], [79.7, 5317.0], [79.8, 5317.0], [79.9, 5317.0], [80.0, 5368.0], [80.1, 5368.0], [80.2, 5368.0], [80.3, 5368.0], [80.4, 5368.0], [80.5, 5368.0], [80.6, 5368.0], [80.7, 5368.0], [80.8, 5368.0], [80.9, 5368.0], [81.0, 5421.0], [81.1, 5421.0], [81.2, 5421.0], [81.3, 5421.0], [81.4, 5421.0], [81.5, 5421.0], [81.6, 5421.0], [81.7, 5421.0], [81.8, 5421.0], [81.9, 5421.0], [82.0, 5423.0], [82.1, 5423.0], [82.2, 5423.0], [82.3, 5423.0], [82.4, 5423.0], [82.5, 5423.0], [82.6, 5423.0], [82.7, 5423.0], [82.8, 5423.0], [82.9, 5423.0], [83.0, 5426.0], [83.1, 5426.0], [83.2, 5426.0], [83.3, 5426.0], [83.4, 5426.0], [83.5, 5426.0], [83.6, 5426.0], [83.7, 5426.0], [83.8, 5426.0], [83.9, 5426.0], [84.0, 5439.0], [84.1, 5439.0], [84.2, 5439.0], [84.3, 5439.0], [84.4, 5439.0], [84.5, 5439.0], [84.6, 5439.0], [84.7, 5439.0], [84.8, 5439.0], [84.9, 5439.0], [85.0, 5440.0], [85.1, 5440.0], [85.2, 5440.0], [85.3, 5440.0], [85.4, 5440.0], [85.5, 5440.0], [85.6, 5440.0], [85.7, 5440.0], [85.8, 5440.0], [85.9, 5440.0], [86.0, 5449.0], [86.1, 5449.0], [86.2, 5449.0], [86.3, 5449.0], [86.4, 5449.0], [86.5, 5449.0], [86.6, 5449.0], [86.7, 5449.0], [86.8, 5449.0], [86.9, 5449.0], [87.0, 5460.0], [87.1, 5460.0], [87.2, 5460.0], [87.3, 5460.0], [87.4, 5460.0], [87.5, 5460.0], [87.6, 5460.0], [87.7, 5460.0], [87.8, 5460.0], [87.9, 5460.0], [88.0, 5471.0], [88.1, 5471.0], [88.2, 5471.0], [88.3, 5471.0], [88.4, 5471.0], [88.5, 5471.0], [88.6, 5471.0], [88.7, 5471.0], [88.8, 5471.0], [88.9, 5471.0], [89.0, 5473.0], [89.1, 5473.0], [89.2, 5473.0], [89.3, 5473.0], [89.4, 5473.0], [89.5, 5473.0], [89.6, 5473.0], [89.7, 5473.0], [89.8, 5473.0], [89.9, 5473.0], [90.0, 5475.0], [90.1, 5475.0], [90.2, 5475.0], [90.3, 5475.0], [90.4, 5475.0], [90.5, 5475.0], [90.6, 5475.0], [90.7, 5475.0], [90.8, 5475.0], [90.9, 5475.0], [91.0, 5498.0], [91.1, 5498.0], [91.2, 5498.0], [91.3, 5498.0], [91.4, 5498.0], [91.5, 5498.0], [91.6, 5498.0], [91.7, 5498.0], [91.8, 5498.0], [91.9, 5498.0], [92.0, 5523.0], [92.1, 5523.0], [92.2, 5523.0], [92.3, 5523.0], [92.4, 5523.0], [92.5, 5523.0], [92.6, 5523.0], [92.7, 5523.0], [92.8, 5523.0], [92.9, 5523.0], [93.0, 5536.0], [93.1, 5536.0], [93.2, 5536.0], [93.3, 5536.0], [93.4, 5536.0], [93.5, 5536.0], [93.6, 5536.0], [93.7, 5536.0], [93.8, 5536.0], [93.9, 5536.0], [94.0, 5557.0], [94.1, 5557.0], [94.2, 5557.0], [94.3, 5557.0], [94.4, 5557.0], [94.5, 5557.0], [94.6, 5557.0], [94.7, 5557.0], [94.8, 5557.0], [94.9, 5557.0], [95.0, 5571.0], [95.1, 5571.0], [95.2, 5571.0], [95.3, 5571.0], [95.4, 5571.0], [95.5, 5571.0], [95.6, 5571.0], [95.7, 5571.0], [95.8, 5571.0], [95.9, 5571.0], [96.0, 5591.0], [96.1, 5591.0], [96.2, 5591.0], [96.3, 5591.0], [96.4, 5591.0], [96.5, 5591.0], [96.6, 5591.0], [96.7, 5591.0], [96.8, 5591.0], [96.9, 5591.0], [97.0, 5661.0], [97.1, 5661.0], [97.2, 5661.0], [97.3, 5661.0], [97.4, 5661.0], [97.5, 5661.0], [97.6, 5661.0], [97.7, 5661.0], [97.8, 5661.0], [97.9, 5661.0], [98.0, 5661.0], [98.1, 5661.0], [98.2, 5661.0], [98.3, 5661.0], [98.4, 5661.0], [98.5, 5661.0], [98.6, 5661.0], [98.7, 5661.0], [98.8, 5661.0], [98.9, 5661.0], [99.0, 5682.0], [99.1, 5682.0], [99.2, 5682.0], [99.3, 5682.0], [99.4, 5682.0], [99.5, 5682.0], [99.6, 5682.0], [99.7, 5682.0], [99.8, 5682.0], [99.9, 5682.0]], "isOverall": false, "label": "Dashboard Test", "isController": true}, {"data": [[0.0, 318.0], [0.1, 318.0], [0.2, 318.0], [0.3, 318.0], [0.4, 318.0], [0.5, 318.0], [0.6, 318.0], [0.7, 318.0], [0.8, 318.0], [0.9, 318.0], [1.0, 338.0], [1.1, 338.0], [1.2, 338.0], [1.3, 338.0], [1.4, 338.0], [1.5, 338.0], [1.6, 338.0], [1.7, 338.0], [1.8, 338.0], [1.9, 338.0], [2.0, 386.0], [2.1, 386.0], [2.2, 386.0], [2.3, 386.0], [2.4, 386.0], [2.5, 386.0], [2.6, 386.0], [2.7, 386.0], [2.8, 386.0], [2.9, 386.0], [3.0, 446.0], [3.1, 446.0], [3.2, 446.0], [3.3, 446.0], [3.4, 446.0], [3.5, 446.0], [3.6, 446.0], [3.7, 446.0], [3.8, 446.0], [3.9, 446.0], [4.0, 470.0], [4.1, 470.0], [4.2, 470.0], [4.3, 470.0], [4.4, 470.0], [4.5, 470.0], [4.6, 470.0], [4.7, 470.0], [4.8, 470.0], [4.9, 470.0], [5.0, 563.0], [5.1, 563.0], [5.2, 563.0], [5.3, 563.0], [5.4, 563.0], [5.5, 563.0], [5.6, 563.0], [5.7, 563.0], [5.8, 563.0], [5.9, 563.0], [6.0, 583.0], [6.1, 583.0], [6.2, 583.0], [6.3, 583.0], [6.4, 583.0], [6.5, 583.0], [6.6, 583.0], [6.7, 583.0], [6.8, 583.0], [6.9, 583.0], [7.0, 585.0], [7.1, 585.0], [7.2, 585.0], [7.3, 585.0], [7.4, 585.0], [7.5, 585.0], [7.6, 585.0], [7.7, 585.0], [7.8, 585.0], [7.9, 585.0], [8.0, 598.0], [8.1, 598.0], [8.2, 598.0], [8.3, 598.0], [8.4, 598.0], [8.5, 598.0], [8.6, 598.0], [8.7, 598.0], [8.8, 598.0], [8.9, 598.0], [9.0, 617.0], [9.1, 617.0], [9.2, 617.0], [9.3, 617.0], [9.4, 617.0], [9.5, 617.0], [9.6, 617.0], [9.7, 617.0], [9.8, 617.0], [9.9, 617.0], [10.0, 702.0], [10.1, 702.0], [10.2, 702.0], [10.3, 702.0], [10.4, 702.0], [10.5, 702.0], [10.6, 702.0], [10.7, 702.0], [10.8, 702.0], [10.9, 702.0], [11.0, 705.0], [11.1, 705.0], [11.2, 705.0], [11.3, 705.0], [11.4, 705.0], [11.5, 705.0], [11.6, 705.0], [11.7, 705.0], [11.8, 705.0], [11.9, 705.0], [12.0, 718.0], [12.1, 718.0], [12.2, 718.0], [12.3, 718.0], [12.4, 718.0], [12.5, 718.0], [12.6, 718.0], [12.7, 718.0], [12.8, 718.0], [12.9, 718.0], [13.0, 725.0], [13.1, 725.0], [13.2, 725.0], [13.3, 725.0], [13.4, 725.0], [13.5, 725.0], [13.6, 725.0], [13.7, 725.0], [13.8, 725.0], [13.9, 725.0], [14.0, 816.0], [14.1, 816.0], [14.2, 816.0], [14.3, 816.0], [14.4, 816.0], [14.5, 816.0], [14.6, 816.0], [14.7, 816.0], [14.8, 816.0], [14.9, 816.0], [15.0, 904.0], [15.1, 904.0], [15.2, 904.0], [15.3, 904.0], [15.4, 904.0], [15.5, 904.0], [15.6, 904.0], [15.7, 904.0], [15.8, 904.0], [15.9, 904.0], [16.0, 914.0], [16.1, 914.0], [16.2, 914.0], [16.3, 914.0], [16.4, 914.0], [16.5, 914.0], [16.6, 914.0], [16.7, 914.0], [16.8, 914.0], [16.9, 914.0], [17.0, 948.0], [17.1, 948.0], [17.2, 948.0], [17.3, 948.0], [17.4, 948.0], [17.5, 948.0], [17.6, 948.0], [17.7, 948.0], [17.8, 948.0], [17.9, 948.0], [18.0, 994.0], [18.1, 994.0], [18.2, 994.0], [18.3, 994.0], [18.4, 994.0], [18.5, 994.0], [18.6, 994.0], [18.7, 994.0], [18.8, 994.0], [18.9, 994.0], [19.0, 997.0], [19.1, 997.0], [19.2, 997.0], [19.3, 997.0], [19.4, 997.0], [19.5, 997.0], [19.6, 997.0], [19.7, 997.0], [19.8, 997.0], [19.9, 997.0], [20.0, 1049.0], [20.1, 1049.0], [20.2, 1049.0], [20.3, 1049.0], [20.4, 1049.0], [20.5, 1049.0], [20.6, 1049.0], [20.7, 1049.0], [20.8, 1049.0], [20.9, 1049.0], [21.0, 1128.0], [21.1, 1128.0], [21.2, 1128.0], [21.3, 1128.0], [21.4, 1128.0], [21.5, 1128.0], [21.6, 1128.0], [21.7, 1128.0], [21.8, 1128.0], [21.9, 1128.0], [22.0, 1198.0], [22.1, 1198.0], [22.2, 1198.0], [22.3, 1198.0], [22.4, 1198.0], [22.5, 1198.0], [22.6, 1198.0], [22.7, 1198.0], [22.8, 1198.0], [22.9, 1198.0], [23.0, 1200.0], [23.1, 1200.0], [23.2, 1200.0], [23.3, 1200.0], [23.4, 1200.0], [23.5, 1200.0], [23.6, 1200.0], [23.7, 1200.0], [23.8, 1200.0], [23.9, 1200.0], [24.0, 1204.0], [24.1, 1204.0], [24.2, 1204.0], [24.3, 1204.0], [24.4, 1204.0], [24.5, 1204.0], [24.6, 1204.0], [24.7, 1204.0], [24.8, 1204.0], [24.9, 1204.0], [25.0, 1207.0], [25.1, 1207.0], [25.2, 1207.0], [25.3, 1207.0], [25.4, 1207.0], [25.5, 1207.0], [25.6, 1207.0], [25.7, 1207.0], [25.8, 1207.0], [25.9, 1207.0], [26.0, 1210.0], [26.1, 1210.0], [26.2, 1210.0], [26.3, 1210.0], [26.4, 1210.0], [26.5, 1210.0], [26.6, 1210.0], [26.7, 1210.0], [26.8, 1210.0], [26.9, 1210.0], [27.0, 1215.0], [27.1, 1215.0], [27.2, 1215.0], [27.3, 1215.0], [27.4, 1215.0], [27.5, 1215.0], [27.6, 1215.0], [27.7, 1215.0], [27.8, 1215.0], [27.9, 1215.0], [28.0, 1268.0], [28.1, 1268.0], [28.2, 1268.0], [28.3, 1268.0], [28.4, 1268.0], [28.5, 1268.0], [28.6, 1268.0], [28.7, 1268.0], [28.8, 1268.0], [28.9, 1268.0], [29.0, 1289.0], [29.1, 1289.0], [29.2, 1289.0], [29.3, 1289.0], [29.4, 1289.0], [29.5, 1289.0], [29.6, 1289.0], [29.7, 1289.0], [29.8, 1289.0], [29.9, 1289.0], [30.0, 1305.0], [30.1, 1305.0], [30.2, 1305.0], [30.3, 1305.0], [30.4, 1305.0], [30.5, 1305.0], [30.6, 1305.0], [30.7, 1305.0], [30.8, 1305.0], [30.9, 1305.0], [31.0, 1315.0], [31.1, 1315.0], [31.2, 1315.0], [31.3, 1315.0], [31.4, 1315.0], [31.5, 1315.0], [31.6, 1315.0], [31.7, 1315.0], [31.8, 1315.0], [31.9, 1315.0], [32.0, 1318.0], [32.1, 1318.0], [32.2, 1318.0], [32.3, 1318.0], [32.4, 1318.0], [32.5, 1318.0], [32.6, 1318.0], [32.7, 1318.0], [32.8, 1318.0], [32.9, 1318.0], [33.0, 1381.0], [33.1, 1381.0], [33.2, 1381.0], [33.3, 1381.0], [33.4, 1381.0], [33.5, 1381.0], [33.6, 1381.0], [33.7, 1381.0], [33.8, 1381.0], [33.9, 1381.0], [34.0, 1394.0], [34.1, 1394.0], [34.2, 1394.0], [34.3, 1394.0], [34.4, 1394.0], [34.5, 1394.0], [34.6, 1394.0], [34.7, 1394.0], [34.8, 1394.0], [34.9, 1394.0], [35.0, 1396.0], [35.1, 1396.0], [35.2, 1396.0], [35.3, 1396.0], [35.4, 1396.0], [35.5, 1396.0], [35.6, 1396.0], [35.7, 1396.0], [35.8, 1396.0], [35.9, 1396.0], [36.0, 1399.0], [36.1, 1399.0], [36.2, 1399.0], [36.3, 1399.0], [36.4, 1399.0], [36.5, 1399.0], [36.6, 1399.0], [36.7, 1399.0], [36.8, 1399.0], [36.9, 1399.0], [37.0, 1401.0], [37.1, 1401.0], [37.2, 1401.0], [37.3, 1401.0], [37.4, 1401.0], [37.5, 1401.0], [37.6, 1401.0], [37.7, 1401.0], [37.8, 1401.0], [37.9, 1401.0], [38.0, 1403.0], [38.1, 1403.0], [38.2, 1403.0], [38.3, 1403.0], [38.4, 1403.0], [38.5, 1403.0], [38.6, 1403.0], [38.7, 1403.0], [38.8, 1403.0], [38.9, 1403.0], [39.0, 1408.0], [39.1, 1408.0], [39.2, 1408.0], [39.3, 1408.0], [39.4, 1408.0], [39.5, 1408.0], [39.6, 1408.0], [39.7, 1408.0], [39.8, 1408.0], [39.9, 1408.0], [40.0, 1412.0], [40.1, 1412.0], [40.2, 1412.0], [40.3, 1412.0], [40.4, 1412.0], [40.5, 1412.0], [40.6, 1412.0], [40.7, 1412.0], [40.8, 1412.0], [40.9, 1412.0], [41.0, 1418.0], [41.1, 1418.0], [41.2, 1418.0], [41.3, 1418.0], [41.4, 1418.0], [41.5, 1418.0], [41.6, 1418.0], [41.7, 1418.0], [41.8, 1418.0], [41.9, 1418.0], [42.0, 1424.0], [42.1, 1424.0], [42.2, 1424.0], [42.3, 1424.0], [42.4, 1424.0], [42.5, 1424.0], [42.6, 1424.0], [42.7, 1424.0], [42.8, 1424.0], [42.9, 1424.0], [43.0, 1436.0], [43.1, 1436.0], [43.2, 1436.0], [43.3, 1436.0], [43.4, 1436.0], [43.5, 1436.0], [43.6, 1436.0], [43.7, 1436.0], [43.8, 1436.0], [43.9, 1436.0], [44.0, 1475.0], [44.1, 1475.0], [44.2, 1475.0], [44.3, 1475.0], [44.4, 1475.0], [44.5, 1475.0], [44.6, 1475.0], [44.7, 1475.0], [44.8, 1475.0], [44.9, 1475.0], [45.0, 1494.0], [45.1, 1494.0], [45.2, 1494.0], [45.3, 1494.0], [45.4, 1494.0], [45.5, 1494.0], [45.6, 1494.0], [45.7, 1494.0], [45.8, 1494.0], [45.9, 1494.0], [46.0, 1513.0], [46.1, 1513.0], [46.2, 1513.0], [46.3, 1513.0], [46.4, 1513.0], [46.5, 1513.0], [46.6, 1513.0], [46.7, 1513.0], [46.8, 1513.0], [46.9, 1513.0], [47.0, 1520.0], [47.1, 1520.0], [47.2, 1520.0], [47.3, 1520.0], [47.4, 1520.0], [47.5, 1520.0], [47.6, 1520.0], [47.7, 1520.0], [47.8, 1520.0], [47.9, 1520.0], [48.0, 1526.0], [48.1, 1526.0], [48.2, 1526.0], [48.3, 1526.0], [48.4, 1526.0], [48.5, 1526.0], [48.6, 1526.0], [48.7, 1526.0], [48.8, 1526.0], [48.9, 1526.0], [49.0, 1570.0], [49.1, 1570.0], [49.2, 1570.0], [49.3, 1570.0], [49.4, 1570.0], [49.5, 1570.0], [49.6, 1570.0], [49.7, 1570.0], [49.8, 1570.0], [49.9, 1570.0], [50.0, 1583.0], [50.1, 1583.0], [50.2, 1583.0], [50.3, 1583.0], [50.4, 1583.0], [50.5, 1583.0], [50.6, 1583.0], [50.7, 1583.0], [50.8, 1583.0], [50.9, 1583.0], [51.0, 1583.0], [51.1, 1583.0], [51.2, 1583.0], [51.3, 1583.0], [51.4, 1583.0], [51.5, 1583.0], [51.6, 1583.0], [51.7, 1583.0], [51.8, 1583.0], [51.9, 1583.0], [52.0, 1586.0], [52.1, 1586.0], [52.2, 1586.0], [52.3, 1586.0], [52.4, 1586.0], [52.5, 1586.0], [52.6, 1586.0], [52.7, 1586.0], [52.8, 1586.0], [52.9, 1586.0], [53.0, 1591.0], [53.1, 1591.0], [53.2, 1591.0], [53.3, 1591.0], [53.4, 1591.0], [53.5, 1591.0], [53.6, 1591.0], [53.7, 1591.0], [53.8, 1591.0], [53.9, 1591.0], [54.0, 1594.0], [54.1, 1594.0], [54.2, 1594.0], [54.3, 1594.0], [54.4, 1594.0], [54.5, 1594.0], [54.6, 1594.0], [54.7, 1594.0], [54.8, 1594.0], [54.9, 1594.0], [55.0, 1656.0], [55.1, 1656.0], [55.2, 1656.0], [55.3, 1656.0], [55.4, 1656.0], [55.5, 1656.0], [55.6, 1656.0], [55.7, 1656.0], [55.8, 1656.0], [55.9, 1656.0], [56.0, 1679.0], [56.1, 1679.0], [56.2, 1679.0], [56.3, 1679.0], [56.4, 1679.0], [56.5, 1679.0], [56.6, 1679.0], [56.7, 1679.0], [56.8, 1679.0], [56.9, 1679.0], [57.0, 1696.0], [57.1, 1696.0], [57.2, 1696.0], [57.3, 1696.0], [57.4, 1696.0], [57.5, 1696.0], [57.6, 1696.0], [57.7, 1696.0], [57.8, 1696.0], [57.9, 1696.0], [58.0, 1705.0], [58.1, 1705.0], [58.2, 1705.0], [58.3, 1705.0], [58.4, 1705.0], [58.5, 1705.0], [58.6, 1705.0], [58.7, 1705.0], [58.8, 1705.0], [58.9, 1705.0], [59.0, 1714.0], [59.1, 1714.0], [59.2, 1714.0], [59.3, 1714.0], [59.4, 1714.0], [59.5, 1714.0], [59.6, 1714.0], [59.7, 1714.0], [59.8, 1714.0], [59.9, 1714.0], [60.0, 1780.0], [60.1, 1780.0], [60.2, 1780.0], [60.3, 1780.0], [60.4, 1780.0], [60.5, 1780.0], [60.6, 1780.0], [60.7, 1780.0], [60.8, 1780.0], [60.9, 1780.0], [61.0, 1803.0], [61.1, 1803.0], [61.2, 1803.0], [61.3, 1803.0], [61.4, 1803.0], [61.5, 1803.0], [61.6, 1803.0], [61.7, 1803.0], [61.8, 1803.0], [61.9, 1803.0], [62.0, 1809.0], [62.1, 1809.0], [62.2, 1809.0], [62.3, 1809.0], [62.4, 1809.0], [62.5, 1809.0], [62.6, 1809.0], [62.7, 1809.0], [62.8, 1809.0], [62.9, 1809.0], [63.0, 1814.0], [63.1, 1814.0], [63.2, 1814.0], [63.3, 1814.0], [63.4, 1814.0], [63.5, 1814.0], [63.6, 1814.0], [63.7, 1814.0], [63.8, 1814.0], [63.9, 1814.0], [64.0, 1849.0], [64.1, 1849.0], [64.2, 1849.0], [64.3, 1849.0], [64.4, 1849.0], [64.5, 1849.0], [64.6, 1849.0], [64.7, 1849.0], [64.8, 1849.0], [64.9, 1849.0], [65.0, 1872.0], [65.1, 1872.0], [65.2, 1872.0], [65.3, 1872.0], [65.4, 1872.0], [65.5, 1872.0], [65.6, 1872.0], [65.7, 1872.0], [65.8, 1872.0], [65.9, 1872.0], [66.0, 1888.0], [66.1, 1888.0], [66.2, 1888.0], [66.3, 1888.0], [66.4, 1888.0], [66.5, 1888.0], [66.6, 1888.0], [66.7, 1888.0], [66.8, 1888.0], [66.9, 1888.0], [67.0, 1901.0], [67.1, 1901.0], [67.2, 1901.0], [67.3, 1901.0], [67.4, 1901.0], [67.5, 1901.0], [67.6, 1901.0], [67.7, 1901.0], [67.8, 1901.0], [67.9, 1901.0], [68.0, 1946.0], [68.1, 1946.0], [68.2, 1946.0], [68.3, 1946.0], [68.4, 1946.0], [68.5, 1946.0], [68.6, 1946.0], [68.7, 1946.0], [68.8, 1946.0], [68.9, 1946.0], [69.0, 1956.0], [69.1, 1956.0], [69.2, 1956.0], [69.3, 1956.0], [69.4, 1956.0], [69.5, 1956.0], [69.6, 1956.0], [69.7, 1956.0], [69.8, 1956.0], [69.9, 1956.0], [70.0, 1966.0], [70.1, 1966.0], [70.2, 1966.0], [70.3, 1966.0], [70.4, 1966.0], [70.5, 1966.0], [70.6, 1966.0], [70.7, 1966.0], [70.8, 1966.0], [70.9, 1966.0], [71.0, 1980.0], [71.1, 1980.0], [71.2, 1980.0], [71.3, 1980.0], [71.4, 1980.0], [71.5, 1980.0], [71.6, 1980.0], [71.7, 1980.0], [71.8, 1980.0], [71.9, 1980.0], [72.0, 2008.0], [72.1, 2008.0], [72.2, 2008.0], [72.3, 2008.0], [72.4, 2008.0], [72.5, 2008.0], [72.6, 2008.0], [72.7, 2008.0], [72.8, 2008.0], [72.9, 2008.0], [73.0, 2023.0], [73.1, 2023.0], [73.2, 2023.0], [73.3, 2023.0], [73.4, 2023.0], [73.5, 2023.0], [73.6, 2023.0], [73.7, 2023.0], [73.8, 2023.0], [73.9, 2023.0], [74.0, 2063.0], [74.1, 2063.0], [74.2, 2063.0], [74.3, 2063.0], [74.4, 2063.0], [74.5, 2063.0], [74.6, 2063.0], [74.7, 2063.0], [74.8, 2063.0], [74.9, 2063.0], [75.0, 2069.0], [75.1, 2069.0], [75.2, 2069.0], [75.3, 2069.0], [75.4, 2069.0], [75.5, 2069.0], [75.6, 2069.0], [75.7, 2069.0], [75.8, 2069.0], [75.9, 2069.0], [76.0, 2082.0], [76.1, 2082.0], [76.2, 2082.0], [76.3, 2082.0], [76.4, 2082.0], [76.5, 2082.0], [76.6, 2082.0], [76.7, 2082.0], [76.8, 2082.0], [76.9, 2082.0], [77.0, 2084.0], [77.1, 2084.0], [77.2, 2084.0], [77.3, 2084.0], [77.4, 2084.0], [77.5, 2084.0], [77.6, 2084.0], [77.7, 2084.0], [77.8, 2084.0], [77.9, 2084.0], [78.0, 2102.0], [78.1, 2102.0], [78.2, 2102.0], [78.3, 2102.0], [78.4, 2102.0], [78.5, 2102.0], [78.6, 2102.0], [78.7, 2102.0], [78.8, 2102.0], [78.9, 2102.0], [79.0, 2114.0], [79.1, 2114.0], [79.2, 2114.0], [79.3, 2114.0], [79.4, 2114.0], [79.5, 2114.0], [79.6, 2114.0], [79.7, 2114.0], [79.8, 2114.0], [79.9, 2114.0], [80.0, 2160.0], [80.1, 2160.0], [80.2, 2160.0], [80.3, 2160.0], [80.4, 2160.0], [80.5, 2160.0], [80.6, 2160.0], [80.7, 2160.0], [80.8, 2160.0], [80.9, 2160.0], [81.0, 2189.0], [81.1, 2189.0], [81.2, 2189.0], [81.3, 2189.0], [81.4, 2189.0], [81.5, 2189.0], [81.6, 2189.0], [81.7, 2189.0], [81.8, 2189.0], [81.9, 2189.0], [82.0, 2210.0], [82.1, 2210.0], [82.2, 2210.0], [82.3, 2210.0], [82.4, 2210.0], [82.5, 2210.0], [82.6, 2210.0], [82.7, 2210.0], [82.8, 2210.0], [82.9, 2210.0], [83.0, 2276.0], [83.1, 2276.0], [83.2, 2276.0], [83.3, 2276.0], [83.4, 2276.0], [83.5, 2276.0], [83.6, 2276.0], [83.7, 2276.0], [83.8, 2276.0], [83.9, 2276.0], [84.0, 2289.0], [84.1, 2289.0], [84.2, 2289.0], [84.3, 2289.0], [84.4, 2289.0], [84.5, 2289.0], [84.6, 2289.0], [84.7, 2289.0], [84.8, 2289.0], [84.9, 2289.0], [85.0, 2369.0], [85.1, 2369.0], [85.2, 2369.0], [85.3, 2369.0], [85.4, 2369.0], [85.5, 2369.0], [85.6, 2369.0], [85.7, 2369.0], [85.8, 2369.0], [85.9, 2369.0], [86.0, 2377.0], [86.1, 2377.0], [86.2, 2377.0], [86.3, 2377.0], [86.4, 2377.0], [86.5, 2377.0], [86.6, 2377.0], [86.7, 2377.0], [86.8, 2377.0], [86.9, 2377.0], [87.0, 2410.0], [87.1, 2410.0], [87.2, 2410.0], [87.3, 2410.0], [87.4, 2410.0], [87.5, 2410.0], [87.6, 2410.0], [87.7, 2410.0], [87.8, 2410.0], [87.9, 2410.0], [88.0, 2486.0], [88.1, 2486.0], [88.2, 2486.0], [88.3, 2486.0], [88.4, 2486.0], [88.5, 2486.0], [88.6, 2486.0], [88.7, 2486.0], [88.8, 2486.0], [88.9, 2486.0], [89.0, 2487.0], [89.1, 2487.0], [89.2, 2487.0], [89.3, 2487.0], [89.4, 2487.0], [89.5, 2487.0], [89.6, 2487.0], [89.7, 2487.0], [89.8, 2487.0], [89.9, 2487.0], [90.0, 2489.0], [90.1, 2489.0], [90.2, 2489.0], [90.3, 2489.0], [90.4, 2489.0], [90.5, 2489.0], [90.6, 2489.0], [90.7, 2489.0], [90.8, 2489.0], [90.9, 2489.0], [91.0, 2517.0], [91.1, 2517.0], [91.2, 2517.0], [91.3, 2517.0], [91.4, 2517.0], [91.5, 2517.0], [91.6, 2517.0], [91.7, 2517.0], [91.8, 2517.0], [91.9, 2517.0], [92.0, 2534.0], [92.1, 2534.0], [92.2, 2534.0], [92.3, 2534.0], [92.4, 2534.0], [92.5, 2534.0], [92.6, 2534.0], [92.7, 2534.0], [92.8, 2534.0], [92.9, 2534.0], [93.0, 2538.0], [93.1, 2538.0], [93.2, 2538.0], [93.3, 2538.0], [93.4, 2538.0], [93.5, 2538.0], [93.6, 2538.0], [93.7, 2538.0], [93.8, 2538.0], [93.9, 2538.0], [94.0, 2562.0], [94.1, 2562.0], [94.2, 2562.0], [94.3, 2562.0], [94.4, 2562.0], [94.5, 2562.0], [94.6, 2562.0], [94.7, 2562.0], [94.8, 2562.0], [94.9, 2562.0], [95.0, 2569.0], [95.1, 2569.0], [95.2, 2569.0], [95.3, 2569.0], [95.4, 2569.0], [95.5, 2569.0], [95.6, 2569.0], [95.7, 2569.0], [95.8, 2569.0], [95.9, 2569.0], [96.0, 2713.0], [96.1, 2713.0], [96.2, 2713.0], [96.3, 2713.0], [96.4, 2713.0], [96.5, 2713.0], [96.6, 2713.0], [96.7, 2713.0], [96.8, 2713.0], [96.9, 2713.0], [97.0, 2774.0], [97.1, 2774.0], [97.2, 2774.0], [97.3, 2774.0], [97.4, 2774.0], [97.5, 2774.0], [97.6, 2774.0], [97.7, 2774.0], [97.8, 2774.0], [97.9, 2774.0], [98.0, 2818.0], [98.1, 2818.0], [98.2, 2818.0], [98.3, 2818.0], [98.4, 2818.0], [98.5, 2818.0], [98.6, 2818.0], [98.7, 2818.0], [98.8, 2818.0], [98.9, 2818.0], [99.0, 3052.0], [99.1, 3052.0], [99.2, 3052.0], [99.3, 3052.0], [99.4, 3052.0], [99.5, 3052.0], [99.6, 3052.0], [99.7, 3052.0], [99.8, 3052.0], [99.9, 3052.0]], "isOverall": false, "label": "https://app.quickconnect.biz/api/api/v1/dashboard/bar-diagram", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 300.0, "maxY": 13.0, "series": [{"data": [[2100.0, 1.0], [2200.0, 3.0], [600.0, 6.0], [700.0, 6.0], [3000.0, 1.0], [3100.0, 2.0], [800.0, 13.0], [900.0, 7.0], [1000.0, 5.0], [1100.0, 4.0], [300.0, 3.0], [1200.0, 5.0], [1300.0, 9.0], [1400.0, 4.0], [1500.0, 4.0], [400.0, 9.0], [1600.0, 2.0], [1700.0, 6.0], [1800.0, 3.0], [1900.0, 1.0], [500.0, 3.0], [2000.0, 3.0]], "isOverall": false, "label": "https://app.quickconnect.biz/api/api/v1/conversations?page=1&perPage=20", "isController": false}, {"data": [[600.0, 1.0], [700.0, 1.0], [800.0, 3.0], [900.0, 1.0], [1000.0, 3.0], [1100.0, 2.0], [1200.0, 3.0], [1300.0, 2.0], [1400.0, 4.0], [1500.0, 3.0], [1600.0, 5.0], [1700.0, 2.0], [1800.0, 9.0], [1900.0, 4.0], [2000.0, 6.0], [2100.0, 5.0], [2300.0, 8.0], [2200.0, 7.0], [2400.0, 9.0], [2500.0, 6.0], [2600.0, 5.0], [2700.0, 5.0], [2800.0, 1.0], [2900.0, 1.0], [3000.0, 2.0], [3100.0, 1.0], [3400.0, 1.0]], "isOverall": false, "label": "https://app.quickconnect.biz/api/api/v1/campaigns/latest-campaigns-with-delivery-stats", "isController": false}, {"data": [[2900.0, 1.0], [3000.0, 1.0], [3200.0, 1.0], [3300.0, 1.0], [3400.0, 1.0], [3500.0, 1.0], [3700.0, 2.0], [3800.0, 3.0], [3900.0, 4.0], [4000.0, 1.0], [4100.0, 1.0], [4200.0, 4.0], [4400.0, 4.0], [4500.0, 2.0], [4600.0, 4.0], [4800.0, 4.0], [4700.0, 6.0], [4900.0, 10.0], [5100.0, 9.0], [5000.0, 8.0], [5200.0, 9.0], [5300.0, 4.0], [5500.0, 5.0], [5400.0, 11.0], [5600.0, 3.0]], "isOverall": false, "label": "Dashboard Test", "isController": true}, {"data": [[600.0, 1.0], [700.0, 4.0], [800.0, 1.0], [900.0, 5.0], [1000.0, 1.0], [1100.0, 2.0], [1200.0, 7.0], [1300.0, 7.0], [1400.0, 9.0], [1500.0, 9.0], [1600.0, 3.0], [1700.0, 3.0], [1800.0, 6.0], [1900.0, 5.0], [2000.0, 6.0], [2100.0, 4.0], [2300.0, 2.0], [2200.0, 3.0], [2400.0, 4.0], [2500.0, 5.0], [2700.0, 2.0], [2800.0, 1.0], [3000.0, 1.0], [300.0, 3.0], [400.0, 2.0], [500.0, 4.0]], "isOverall": false, "label": "https://app.quickconnect.biz/api/api/v1/dashboard/bar-diagram", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 5600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 17.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 160.0, "series": [{"data": [[0.0, 17.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 123.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 160.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 69.5825, "minX": 1.7284725E12, "maxY": 69.5825, "series": [{"data": [[1.7284725E12, 69.5825]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7284725E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 20700000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 338.0, "minX": 1.0, "maxY": 5682.0, "series": [{"data": [[42.0, 399.0], [43.0, 369.0], [45.0, 385.0], [48.0, 440.0], [50.0, 462.0], [51.0, 427.0], [56.0, 446.0], [57.0, 478.0], [58.0, 491.5], [59.0, 443.0], [65.0, 522.0], [67.0, 542.0], [82.0, 656.0], [91.0, 723.0], [89.0, 3099.0], [88.0, 3113.0], [92.0, 673.0], [98.0, 2236.0], [100.0, 1258.5342465753415]], "isOverall": false, "label": "https://app.quickconnect.biz/api/api/v1/conversations?page=1&perPage=20", "isController": false}, {"data": [[91.63, 1186.3699999999997]], "isOverall": false, "label": "https://app.quickconnect.biz/api/api/v1/conversations?page=1&perPage=20-Aggregated", "isController": false}, {"data": [[37.0, 2974.5], [39.0, 2087.0], [43.0, 2764.0], [42.0, 1620.0], [53.0, 1484.0], [59.0, 2798.0], [60.0, 2451.0], [63.0, 2605.0], [67.0, 2257.0], [65.0, 2096.0], [64.0, 2261.0], [70.0, 2692.0], [68.0, 2733.0], [75.0, 2399.0], [72.0, 2338.0], [79.0, 2548.5], [77.0, 2901.0], [83.0, 2333.6], [82.0, 2650.0], [81.0, 2192.0], [80.0, 2475.75], [85.0, 2191.0], [84.0, 1925.5], [91.0, 2247.0], [90.0, 2013.25], [95.0, 2184.1666666666665], [94.0, 2480.3333333333335], [93.0, 2463.5], [92.0, 2480.5], [98.0, 1935.857142857143], [96.0, 2340.0], [100.0, 1316.607142857143], [27.0, 3488.0]], "isOverall": false, "label": "https://app.quickconnect.biz/api/api/v1/campaigns/latest-campaigns-with-delivery-stats", "isController": false}, {"data": [[85.34, 2047.3199999999997]], "isOverall": false, "label": "https://app.quickconnect.biz/api/api/v1/campaigns/latest-campaigns-with-delivery-stats-Aggregated", "isController": false}, {"data": [[2.0, 5571.0], [3.0, 5475.0], [4.0, 5460.0], [5.0, 5523.0], [6.0, 5557.0], [7.0, 5661.0], [8.0, 5317.0], [9.0, 5423.0], [10.0, 5222.0], [11.0, 5310.0], [12.0, 5473.0], [17.0, 5353.8], [18.0, 5440.0], [19.0, 5128.0], [20.0, 5682.0], [21.0, 5158.0], [22.0, 5471.0], [23.0, 5016.0], [25.0, 5021.5], [26.0, 5498.0], [27.0, 5292.0], [28.0, 4971.0], [29.0, 5307.0], [30.0, 5439.0], [31.0, 5449.0], [32.0, 4949.0], [35.0, 5426.0], [34.0, 5062.0], [37.0, 5536.0], [36.0, 5097.0], [39.0, 5207.0], [38.0, 4950.0], [41.0, 5105.0], [40.0, 4931.0], [43.0, 5168.0], [42.0, 4767.0], [45.0, 5049.0], [44.0, 5133.0], [47.0, 5144.0], [46.0, 5095.0], [49.0, 4993.5], [50.0, 4843.0], [53.0, 4934.333333333333], [55.0, 4811.0], [54.0, 5224.0], [56.0, 5293.0], [59.0, 5241.0], [58.0, 4820.0], [60.0, 5292.0], [63.0, 5102.0], [62.0, 4876.5], [67.0, 4993.0], [66.0, 4708.0], [65.0, 4958.0], [64.0, 4562.0], [71.0, 4762.0], [70.0, 4604.0], [69.0, 4902.0], [68.0, 4791.0], [75.0, 4498.0], [74.0, 4661.0], [73.0, 4496.0], [72.0, 4830.0], [79.0, 4289.0], [78.0, 4281.0], [77.0, 4573.0], [76.0, 4624.0], [83.0, 4215.0], [82.0, 4441.0], [81.0, 4248.0], [80.0, 4460.0], [87.0, 3968.0], [86.0, 4111.0], [85.0, 3969.0], [84.0, 4090.0], [91.0, 3859.0], [90.0, 3818.0], [89.0, 3982.0], [88.0, 3928.0], [95.0, 3523.0], [94.0, 3776.0], [93.0, 3816.0], [92.0, 3763.0], [99.0, 3026.0], [98.0, 3237.0], [97.0, 3321.0], [96.0, 3434.0], [100.0, 2985.0], [1.0, 5661.0]], "isOverall": false, "label": "Dashboard Test", "isController": true}, {"data": [[50.680000000000014, 4824.880000000001]], "isOverall": false, "label": "Dashboard Test-Aggregated", "isController": true}, {"data": [[2.0, 1049.0], [3.0, 702.0], [4.0, 585.0], [5.0, 583.0], [6.0, 338.0], [7.0, 1520.0], [8.0, 598.0], [9.0, 816.0], [10.0, 470.0], [11.0, 914.0], [12.0, 1946.0], [17.0, 1167.6], [18.0, 1594.0], [19.0, 994.0], [20.0, 2289.0], [21.0, 563.0], [22.0, 1656.0], [23.0, 718.0], [25.0, 1066.5], [26.0, 2114.0], [27.0, 1980.0], [28.0, 386.0], [29.0, 1305.0], [30.0, 2084.0], [31.0, 2713.0], [32.0, 446.0], [35.0, 2276.0], [34.0, 1404.5], [37.0, 2818.0], [36.0, 1399.0], [39.0, 1289.0], [38.0, 1396.0], [41.0, 1403.0], [40.0, 1513.0], [43.0, 1210.0], [42.0, 617.0], [45.0, 1696.0], [44.0, 2063.0], [47.0, 2102.0], [46.0, 997.0], [49.0, 1695.5], [50.0, 1200.0], [53.0, 1581.0], [55.0, 948.0], [54.0, 2486.0], [56.0, 2517.0], [59.0, 2562.0], [58.0, 1384.0], [60.0, 3052.0], [63.0, 1526.0], [62.0, 1242.5], [67.0, 1591.0], [66.0, 1318.0], [65.0, 1424.0], [64.0, 1207.0], [71.0, 1394.0], [70.0, 1583.0], [69.0, 2534.0], [68.0, 1401.0], [75.0, 1714.0], [74.0, 1966.0], [73.0, 1128.0], [72.0, 1679.0], [79.0, 1586.0], [78.0, 2023.0], [77.0, 2210.0], [76.0, 2069.0], [83.0, 2369.0], [82.0, 2569.0], [81.0, 1381.0], [80.0, 1436.0], [87.0, 2082.0], [86.0, 2774.0], [85.0, 1803.0], [84.0, 2538.0], [91.0, 2489.0], [90.0, 1901.0], [89.0, 2189.0], [88.0, 1814.0], [95.0, 1849.0], [94.0, 2410.0], [93.0, 2377.0], [92.0, 2008.0], [99.0, 1872.0], [98.0, 1809.0], [97.0, 1705.0], [96.0, 2160.0], [100.0, 1888.0], [1.0, 1268.0]], "isOverall": false, "label": "https://app.quickconnect.biz/api/api/v1/dashboard/bar-diagram", "isController": false}, {"data": [[50.680000000000014, 1591.1800000000003]], "isOverall": false, "label": "https://app.quickconnect.biz/api/api/v1/dashboard/bar-diagram-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 5923.333333333333, "minX": 1.7284725E12, "maxY": 8568.333333333334, "series": [{"data": [[1.7284725E12, 5923.333333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.7284725E12, 8568.333333333334]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7284725E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 20700000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1186.3699999999997, "minX": 1.7284725E12, "maxY": 4824.880000000001, "series": [{"data": [[1.7284725E12, 1186.3699999999997]], "isOverall": false, "label": "https://app.quickconnect.biz/api/api/v1/conversations?page=1&perPage=20", "isController": false}, {"data": [[1.7284725E12, 2047.3199999999997]], "isOverall": false, "label": "https://app.quickconnect.biz/api/api/v1/campaigns/latest-campaigns-with-delivery-stats", "isController": false}, {"data": [[1.7284725E12, 4824.880000000001]], "isOverall": false, "label": "Dashboard Test", "isController": true}, {"data": [[1.7284725E12, 1591.1800000000003]], "isOverall": false, "label": "https://app.quickconnect.biz/api/api/v1/dashboard/bar-diagram", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7284725E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 20700000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1186.3600000000004, "minX": 1.7284725E12, "maxY": 4824.8600000000015, "series": [{"data": [[1.7284725E12, 1186.3600000000004]], "isOverall": false, "label": "https://app.quickconnect.biz/api/api/v1/conversations?page=1&perPage=20", "isController": false}, {"data": [[1.7284725E12, 2047.3199999999997]], "isOverall": false, "label": "https://app.quickconnect.biz/api/api/v1/campaigns/latest-campaigns-with-delivery-stats", "isController": false}, {"data": [[1.7284725E12, 4824.8600000000015]], "isOverall": false, "label": "Dashboard Test", "isController": true}, {"data": [[1.7284725E12, 1591.1800000000003]], "isOverall": false, "label": "https://app.quickconnect.biz/api/api/v1/dashboard/bar-diagram", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7284725E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 20700000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.7284725E12, "maxY": 107.63999999999999, "series": [{"data": [[1.7284725E12, 107.63999999999999]], "isOverall": false, "label": "https://app.quickconnect.biz/api/api/v1/conversations?page=1&perPage=20", "isController": false}, {"data": [[1.7284725E12, 0.0]], "isOverall": false, "label": "https://app.quickconnect.biz/api/api/v1/campaigns/latest-campaigns-with-delivery-stats", "isController": false}, {"data": [[1.7284725E12, 107.63999999999997]], "isOverall": false, "label": "Dashboard Test", "isController": true}, {"data": [[1.7284725E12, 0.0]], "isOverall": false, "label": "https://app.quickconnect.biz/api/api/v1/dashboard/bar-diagram", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7284725E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 20700000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 318.0, "minX": 1.7284725E12, "maxY": 3488.0, "series": [{"data": [[1.7284725E12, 3488.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.7284725E12, 318.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.7284725E12, 2533.5]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.7284725E12, 3124.76]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.7284725E12, 1583.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.7284725E12, 2755.7999999999997]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7284725E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 20700000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 650.0, "minX": 8.0, "maxY": 2300.5, "series": [{"data": [[8.0, 650.0], [71.0, 1513.0], [40.0, 675.5], [43.0, 1825.0], [42.0, 2300.5], [45.0, 2267.0], [51.0, 1153.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 71.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 650.0, "minX": 8.0, "maxY": 2300.5, "series": [{"data": [[8.0, 650.0], [71.0, 1513.0], [40.0, 675.5], [43.0, 1825.0], [42.0, 2300.5], [45.0, 2267.0], [51.0, 1153.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 71.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 5.0, "minX": 1.7284725E12, "maxY": 5.0, "series": [{"data": [[1.7284725E12, 5.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7284725E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 20700000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 5.0, "minX": 1.7284725E12, "maxY": 5.0, "series": [{"data": [[1.7284725E12, 5.0]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7284725E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 20700000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.6666666666666667, "minX": 1.7284725E12, "maxY": 1.6666666666666667, "series": [{"data": [[1.7284725E12, 1.6666666666666667]], "isOverall": false, "label": "https://app.quickconnect.biz/api/api/v1/conversations?page=1&perPage=20-success", "isController": false}, {"data": [[1.7284725E12, 1.6666666666666667]], "isOverall": false, "label": "Dashboard Test-success", "isController": true}, {"data": [[1.7284725E12, 1.6666666666666667]], "isOverall": false, "label": "https://app.quickconnect.biz/api/api/v1/dashboard/bar-diagram-success", "isController": false}, {"data": [[1.7284725E12, 1.6666666666666667]], "isOverall": false, "label": "https://app.quickconnect.biz/api/api/v1/campaigns/latest-campaigns-with-delivery-stats-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7284725E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 20700000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 6.666666666666667, "minX": 1.7284725E12, "maxY": 6.666666666666667, "series": [{"data": [[1.7284725E12, 6.666666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7284725E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 20700000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

